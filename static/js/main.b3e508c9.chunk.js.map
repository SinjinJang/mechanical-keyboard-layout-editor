{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["UNIT_1","PLATE_PADDING","KeySwitch","position","x","this","props","y","bounds","left","top","style","width","w","height","h","grid","onDrag","className","onClick","label","React","Component","EditPanel","Form","Group","controlId","Label","File","id","type","accept","onChange","onLayoutFileChange","Button","variant","download","href","onDownloadClick","alert","Control","name","value","selectedKey","onLabelChange","as","selectedAttrs","onSizeChange","src","onAddSwitchClick","KeyPlate","defaultLayout","defaultSize","resizePlate","state","layout","newLayout","Object","keys","length","newSize","setState","e","attrs","target","newValue","Number","console","log","ui","keyLabel","node","textContent","keyObj","deltaX","deltaY","JSON","stringify","reader","FileReader","readAsBinaryString","files","onloadend","layoutObj","parse","result","entries","map","v","newWidth","newHeight","val","end","bottom","stylePlate","push","handleSwitchDrag","handleSwitchClick","handleAddSwitch","handleSizeChange","handleLabelChange","handleDownloadClick","handleLayoutFileChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3e508c9.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\n// 기본 1U 스위치의 크기 정의 (px 단위)\r\nconst UNIT_1 = 60;\r\nconst UNIT_0_25 = UNIT_1 / 4;\r\n// 키 배치판 테두리 표시를 위한 여백\r\nconst PLATE_PADDING = 15;\r\n\r\nclass KeySwitch extends React.Component {\r\n  render() {\r\n    const position = {\r\n      x: this.props.x * UNIT_1 + PLATE_PADDING,\r\n      y: this.props.y * UNIT_1 + PLATE_PADDING,\r\n    };\r\n    const bounds = {\r\n      left: PLATE_PADDING,\r\n      top: PLATE_PADDING,\r\n    };\r\n    const style = {\r\n      width: (this.props.w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n      height: (this.props.h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n    };\r\n    return (\r\n      <Draggable\r\n        grid={[UNIT_0_25, UNIT_0_25]}\r\n        onDrag={this.props.onDrag}\r\n        position={position}\r\n        bounds={bounds}\r\n      >\r\n        <div\r\n          className='key-switch'\r\n          style={style}\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.label}\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nclass EditPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='editpanel__container'>\r\n          <Form.Group controlId='uploadLayout' className='editpanel__item'>\r\n            <Form.Label>Layout File to Upload</Form.Label>\r\n            <Form.File id='layoutFile'\r\n              type='file' accept='.json'\r\n              onChange={this.props.onLayoutFileChange}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-secondary'\r\n            download='layout.json'\r\n            href={`data:text/json; charset=utf-8,${this.props.onDownloadClick()}`}\r\n          >\r\n            Download Layout\r\n          </Button>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-success'\r\n            onClick={() => alert('TODO: generate 3D/2D model')}\r\n          >\r\n            Generate 3D/2D Model\r\n          </Button>\r\n        </div>\r\n        <div className='editpanel__container'>\r\n          <Form.Group controlId='keyLabel' className='editpanel__item'>\r\n            <Form.Label>Key Label</Form.Label>\r\n            <Form.Control type='text' name='key_label'\r\n              value={this.props.selectedKey}\r\n              onChange={this.props.onLabelChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='width' className='editpanel__item'>\r\n            <Form.Label>Width</Form.Label>\r\n            <Form.Control as='select' name='key_width'\r\n              value={this.props.selectedAttrs?.w}\r\n              onChange={this.props.onSizeChange}\r\n            >\r\n              <option value='1'>1U</option>\r\n              <option value='1.25'>1.25U</option>\r\n              <option value='1.5'>1.5U</option>\r\n              <option value='1.75'>1.75U</option>\r\n              <option value='2'>2U</option>\r\n              <option value='2.25'>2.25U</option>\r\n              <option value='2.75'>2.75U</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='height' className='editpanel__item'>\r\n            <Form.Label>Height</Form.Label>\r\n            <Form.Control as='select' name='key_height'\r\n              value={this.props.selectedAttrs?.h}\r\n              onChange={this.props.onSizeChange}\r\n            >\r\n              <option value='1'>1U</option>\r\n              <option value='2'>2U</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-light'\r\n          >\r\n            <img\r\n              src='/images/add_circle_outline_black_24dp.svg'\r\n              className='editpanel__imageicon'\r\n              onClick={this.props.onAddSwitchClick} />\r\n          </Button>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-light'\r\n          >\r\n            <img\r\n              src='/images/remove_circle_outline_black_24dp.svg'\r\n              className='editpanel__imageicon'\r\n              onClick={this.props.onAddSwitchClick} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass KeyPlate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const defaultLayout = {\r\n      'New Key': { 'x': 0, 'y': 0, 'w': 1, 'h': 1 },\r\n    };\r\n    const defaultSize = this.resizePlate(defaultLayout);\r\n    this.state = {\r\n      selectedKey: null,\r\n      layout: defaultLayout,\r\n      ...defaultSize,\r\n    };\r\n  }\r\n\r\n  handleAddSwitch() {\r\n    const newLayout = { ...this.state.layout };\r\n    const newKeyLabel = 'Key ' + Object.keys(newLayout).length;\r\n    newLayout[newKeyLabel] = {\r\n      'x': this.state.width,\r\n      'y': this.state.height - 1,\r\n      'w': 1,\r\n      'h': 1,\r\n    };\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({ layout: newLayout, ...newSize });\r\n  }\r\n\r\n  handleLabelChange(e) {\r\n    const newLayout = { ...this.state.layout };\r\n    const selectedKey = this.state.selectedKey;\r\n\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedKey == null) {\r\n      return;\r\n    }\r\n\r\n    // layout 객체에서 키 라벨을 변경하여 저장\r\n    const attrs = newLayout[selectedKey];\r\n    delete newLayout[selectedKey];\r\n    newLayout[e.target.value] = attrs;\r\n\r\n    this.setState({\r\n      layout: newLayout,\r\n      selectedKey: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSizeChange(e) {\r\n    const newLayout = { ...this.state.layout };\r\n    const selectedKey = this.state.selectedKey;\r\n\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedKey == null) {\r\n      return;\r\n    }\r\n\r\n    // 넓이 또는 높이 크기 변경\r\n    const attrs = newLayout[selectedKey];\r\n    const newValue = Number(e.target.value);\r\n    if (e.target.id === 'width') {\r\n      attrs.w = newValue;\r\n    } else if (e.target.id === 'height') {\r\n      attrs.h = newValue;\r\n    } else {\r\n      console.log('>>>>> undefined id: ' + e.target.id);\r\n      return;\r\n    }\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({\r\n      ...newSize,\r\n      layout: newLayout,\r\n    });\r\n  }\r\n\r\n  handleSwitchDrag(e, ui) {\r\n    // 키 스위치의 좌표 값을 갱신\r\n    const keyLabel = ui.node.textContent;\r\n    const newLayout = { ...this.state.layout };\r\n    const keyObj = newLayout[keyLabel];\r\n    keyObj.x += (ui.deltaX / UNIT_1);\r\n    keyObj.y += (ui.deltaY / UNIT_1);\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({ layout: newLayout, ...newSize });\r\n  };\r\n\r\n  handleSwitchClick(keyLabel) {\r\n    this.setState({ selectedKey: keyLabel });\r\n  }\r\n\r\n  handleDownloadClick() {\r\n    return JSON.stringify(this.state.layout);\r\n  }\r\n\r\n  handleLayoutFileChange(e) {\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(e.target.files[0]);\r\n    reader.onloadend = () => {\r\n      const layoutObj = JSON.parse(reader.result);\r\n\r\n      // 불러온 layout 파일에서 키의 width, height 속성이 없을 경우 1로 설정\r\n      Object.entries(layoutObj.layout).map(([_, v]) => {\r\n        v.w = ('w' in v) ? v.w : 1;\r\n        v.h = ('h' in v) ? v.h : 1;\r\n      });\r\n\r\n      this.setState({\r\n        width: layoutObj.width,\r\n        height: layoutObj.height,\r\n        layout: layoutObj.layout,\r\n        selectedKey: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  // 스위치 판의 넓이 및 높이를 다시 계산한다.\r\n  resizePlate(newLayout) {\r\n    let newWidth = -1;\r\n    let newHeight = -1;\r\n    for (const [_, val] of Object.entries(newLayout)) {\r\n      const end = val.x + val.w;\r\n      newWidth = (end > newWidth) ? end : newWidth;\r\n      const bottom = val.y + val.h;\r\n      newHeight = (bottom > newHeight) ? bottom : newHeight;\r\n    }\r\n\r\n    return { width: newWidth, height: newHeight };\r\n  };\r\n\r\n  render() {\r\n    const stylePlate = {\r\n      width: (this.state.width * UNIT_1) + PLATE_PADDING * 2,\r\n      height: (this.state.height * UNIT_1) + PLATE_PADDING * 2,\r\n    };\r\n    const { selectedKey, layout } = this.state;\r\n\r\n    // 키 스위치 구성\r\n    const keys = []\r\n    for (const [keyLabel, attrs] of Object.entries(layout)) {\r\n      keys.push(\r\n        <KeySwitch\r\n          key={keyLabel}\r\n          label={keyLabel}\r\n          x={attrs.x} y={attrs.y}\r\n          w={attrs.w} h={attrs.h}\r\n          onDrag={(e, ui) => this.handleSwitchDrag(e, ui)}\r\n          onClick={(e) => this.handleSwitchClick(keyLabel)}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <EditPanel\r\n          selectedKey={selectedKey}\r\n          selectedAttrs={layout[selectedKey]}\r\n          onAddSwitchClick={() => this.handleAddSwitch()}\r\n          onSizeChange={(e) => this.handleSizeChange(e)}\r\n          onLabelChange={(e) => this.handleLabelChange(e)}\r\n          onDownloadClick={() => this.handleDownloadClick()}\r\n          onLayoutFileChange={(e) => this.handleLayoutFileChange(e)}\r\n        />\r\n        <div className='key-plate' style={stylePlate}>\r\n          {keys}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Mechanical Keyboard Layout Editor</h1>\r\n      <KeyPlate />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}