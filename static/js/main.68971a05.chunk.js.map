{"version":3,"sources":["utils/LayoutUtil.js","components/KeySwitch.js","images/add_circle_outline_black_24dp.svg","images/remove_circle_outline_black_24dp.svg","App.js","reportWebVitals.js","index.js"],"names":["UNIT_1","keyPosition","x","y","KeySwitch","props","bounds","LayoutUtil","this","label","w","h","isSelected","position","style","width","height","fontWeight","grid","onDrag","className","onClick","React","Component","EditPanel","Form","Group","controlId","Label","File","id","type","accept","onChange","onLayoutFileChange","Button","variant","download","href","onDownloadClick","alert","Control","name","value","selectedKey","onLabelChange","as","selectedAttrs","onSizeChange","alt","src","plus_icon","onAddSwitchClick","minus_icon","onRemoveSwitchClick","KeyPlate","defaultLayout","defaultSize","resizePlate","state","layout","seq","Object","keys","length","newLayout","newKeyLabel","Math","max","newSize","setState","e","attrs","target","newValue","Number","console","log","ui","keyLabel","node","textContent","keyObj","deltaX","deltaY","JSON","stringify","reader","FileReader","readAsBinaryString","files","onloadend","layoutObj","parse","result","entries","map","v","newWidth","newHeight","val","end","bottom","stylePlate","PLATE_PADDING","push","handleSwitchDrag","handleSwitchClick","handleAddSwitch","handleRemoveSwitch","handleSizeChange","handleLabelChange","handleDownloadClick","handleLayoutFileChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68971a05.chunk.js","sourcesContent":["const PLATE_PADDING = 15;\r\nexport const UNIT_1 = 60;\r\nexport const UNIT_0_25 = UNIT_1 / 4;\r\n\r\nexport function keyPosition(x, y) {\r\n  return {\r\n    x: x * UNIT_1 + PLATE_PADDING,\r\n    y: y * UNIT_1 + PLATE_PADDING,\r\n  };\r\n}\r\n\r\nexport function keySize(w, h) {\r\n  return {\r\n    width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n    height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n  };\r\n}\r\n\r\nexport function plateSize(w, h) {\r\n  return {\r\n    width: (w * UNIT_1) + PLATE_PADDING * 2,\r\n    height: (h * UNIT_1) + PLATE_PADDING * 2,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as LayoutUtil from '../utils/LayoutUtil';\r\nimport './KeySwitch.css';\r\n\r\n\r\nclass KeySwitch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bounds = { ...LayoutUtil.keyPosition(0, 0) };\r\n  }\r\n\r\n  render() {\r\n    const { label, x, y, w, h, isSelected } = this.props;\r\n    const position = { ...LayoutUtil.keyPosition(x, y) };\r\n\r\n    const style = {\r\n      ...LayoutUtil.keySize(w, h),\r\n      fontWeight: isSelected ? 'bold' : 'normal',\r\n    };\r\n    return (\r\n      <Draggable\r\n        grid={[LayoutUtil.UNIT_0_25, LayoutUtil.UNIT_0_25]}\r\n        onDrag={this.props.onDrag}\r\n        position={position}\r\n        bounds={this.bounds}\r\n      >\r\n        <div\r\n          className='key-switch'\r\n          style={style}\r\n          onClick={this.props.onClick}\r\n        >\r\n          {label}\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default KeySwitch;\r\n","export default __webpack_public_path__ + \"static/media/add_circle_outline_black_24dp.b4a78441.svg\";","export default __webpack_public_path__ + \"static/media/remove_circle_outline_black_24dp.1bfeccf5.svg\";","import './App.css';\r\nimport React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport * as LayoutUtil from './utils/LayoutUtil';\r\nimport KeySwitch from './components/KeySwitch';\r\n\r\nimport plus_icon from './images/add_circle_outline_black_24dp.svg';\r\nimport minus_icon from './images/remove_circle_outline_black_24dp.svg';\r\n\r\n\r\nclass EditPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='editpanel__container'>\r\n          <Form.Group controlId='uploadLayout' className='editpanel__item'>\r\n            <Form.Label>Layout File to Upload</Form.Label>\r\n            <Form.File id='layoutFile'\r\n              type='file' accept='.json'\r\n              onChange={this.props.onLayoutFileChange}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-secondary'\r\n            download='layout.json'\r\n            href={`data:text/json; charset=utf-8,${this.props.onDownloadClick()}`}\r\n          >\r\n            Download Layout\r\n          </Button>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-success'\r\n            onClick={() => alert('TODO: generate 3D/2D model')}\r\n          >\r\n            Generate 3D/2D Model\r\n          </Button>\r\n        </div>\r\n        <div className='editpanel__container'>\r\n          <Form.Group controlId='keyLabel' className='editpanel__item'>\r\n            <Form.Label>Key Label</Form.Label>\r\n            <Form.Control type='text' name='key_label'\r\n              value={this.props.selectedKey}\r\n              onChange={this.props.onLabelChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='width' className='editpanel__item'>\r\n            <Form.Label>Width</Form.Label>\r\n            <Form.Control as='select' name='key_width'\r\n              value={this.props.selectedAttrs?.w}\r\n              onChange={this.props.onSizeChange}\r\n            >\r\n              <option value='1'>1U</option>\r\n              <option value='1.25'>1.25U</option>\r\n              <option value='1.5'>1.5U</option>\r\n              <option value='1.75'>1.75U</option>\r\n              <option value='2'>2U</option>\r\n              <option value='2.25'>2.25U</option>\r\n              <option value='2.75'>2.75U</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='height' className='editpanel__item'>\r\n            <Form.Label>Height</Form.Label>\r\n            <Form.Control as='select' name='key_height'\r\n              value={this.props.selectedAttrs?.h}\r\n              onChange={this.props.onSizeChange}\r\n            >\r\n              <option value='1'>1U</option>\r\n              <option value='2'>2U</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-light'\r\n          >\r\n            <img\r\n              className='editpanel__imageicon'\r\n              alt='Add New Switch'\r\n              src={plus_icon}\r\n              onClick={this.props.onAddSwitchClick} />\r\n          </Button>\r\n          <Button\r\n            className='editpanel__item'\r\n            variant='outline-light'\r\n          >\r\n            <img\r\n              className='editpanel__imageicon'\r\n              alt='Remove Selected Switch'\r\n              src={minus_icon}\r\n              onClick={this.props.onRemoveSwitchClick} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass KeyPlate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const defaultLayout = {\r\n      'New Key': { 'x': 0, 'y': 0, 'w': 1, 'h': 1 },\r\n    };\r\n    const defaultSize = this.resizePlate(defaultLayout);\r\n    this.state = {\r\n      selectedKey: null,\r\n      layout: defaultLayout,\r\n      ...defaultSize,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 새로 추가할 중복되지 않은 이름의 키 라벨을 생성해준다.\r\n   * \r\n   * @returns 신규 추가될 키 라벨\r\n   */\r\n  newKeyLabel() {\r\n    const { layout } = this.state;\r\n    let seq = Object.keys(layout).length;\r\n    let label;\r\n    do {\r\n      label = 'Key ' + (seq++);\r\n    } while (label in layout);\r\n    return label;\r\n  }\r\n\r\n  handleAddSwitch() {\r\n    const newLayout = { ...this.state.layout };\r\n    newLayout[this.newKeyLabel()] = {\r\n      'x': this.state.width,  // right end 배치\r\n      'y': Math.max(this.state.height - 1, 0),  // bottom align 배치\r\n      'w': 1,\r\n      'h': 1,\r\n    };\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({ layout: newLayout, ...newSize });\r\n  }\r\n\r\n  handleRemoveSwitch() {\r\n    const newLayout = { ...this.state.layout };\r\n    delete newLayout[this.state.selectedKey];\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({\r\n      selectedKey: null,\r\n      selectedAttrs: null,\r\n      layout: newLayout,\r\n      ...newSize,\r\n    });\r\n  }\r\n\r\n  handleLabelChange(e) {\r\n    const newLayout = { ...this.state.layout };\r\n    const selectedKey = this.state.selectedKey;\r\n\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedKey == null) {\r\n      return;\r\n    }\r\n\r\n    // layout 객체에서 키 라벨을 변경하여 저장\r\n    const attrs = newLayout[selectedKey];\r\n    delete newLayout[selectedKey];\r\n    newLayout[e.target.value] = attrs;\r\n\r\n    this.setState({\r\n      layout: newLayout,\r\n      selectedKey: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSizeChange(e) {\r\n    const newLayout = { ...this.state.layout };\r\n    const selectedKey = this.state.selectedKey;\r\n\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedKey == null) {\r\n      return;\r\n    }\r\n\r\n    // 넓이 또는 높이 크기 변경\r\n    const attrs = newLayout[selectedKey];\r\n    const newValue = Number(e.target.value);\r\n    if (e.target.id === 'width') {\r\n      attrs.w = newValue;\r\n    } else if (e.target.id === 'height') {\r\n      attrs.h = newValue;\r\n    } else {\r\n      console.log('>>>>> undefined id: ' + e.target.id);\r\n      return;\r\n    }\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({\r\n      ...newSize,\r\n      layout: newLayout,\r\n    });\r\n  }\r\n\r\n  handleSwitchDrag(e, ui) {\r\n    // 키 스위치의 좌표 값을 갱신\r\n    const keyLabel = ui.node.textContent;\r\n    const newLayout = { ...this.state.layout };\r\n    const keyObj = newLayout[keyLabel];\r\n    keyObj.x += (ui.deltaX / LayoutUtil.UNIT_1);\r\n    keyObj.y += (ui.deltaY / LayoutUtil.UNIT_1);\r\n\r\n    const newSize = this.resizePlate(newLayout);\r\n    this.setState({ layout: newLayout, ...newSize });\r\n  };\r\n\r\n  handleSwitchClick(keyLabel) {\r\n    this.setState({ selectedKey: keyLabel });\r\n  }\r\n\r\n  handleDownloadClick() {\r\n    return JSON.stringify(this.state.layout);\r\n  }\r\n\r\n  handleLayoutFileChange(e) {\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(e.target.files[0]);\r\n    reader.onloadend = () => {\r\n      const layoutObj = JSON.parse(reader.result);\r\n\r\n      // 불러온 layout 파일에서 키의 width, height 속성이 없을 경우 1로 설정\r\n      Object.entries(layoutObj.layout).map(([_, v]) => {\r\n        v.w = ('w' in v) ? v.w : 1;\r\n        v.h = ('h' in v) ? v.h : 1;\r\n      });\r\n\r\n      this.setState({\r\n        width: layoutObj.width,\r\n        height: layoutObj.height,\r\n        layout: layoutObj.layout,\r\n        selectedKey: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  // 스위치 판의 넓이 및 높이를 다시 계산한다.\r\n  resizePlate(newLayout) {\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    for (const [_, val] of Object.entries(newLayout)) {\r\n      const end = val.x + val.w;\r\n      newWidth = (end > newWidth) ? end : newWidth;\r\n      const bottom = val.y + val.h;\r\n      newHeight = (bottom > newHeight) ? bottom : newHeight;\r\n    }\r\n\r\n    return { width: newWidth, height: newHeight };\r\n  };\r\n\r\n  render() {\r\n    const { selectedKey, layout, width, height } = this.state;\r\n    const stylePlate = { ...LayoutUtil.plateSize(width, height) };\r\n\r\n    // 키 스위치 구성\r\n    const keys = []\r\n    for (const [keyLabel, attrs] of Object.entries(layout)) {\r\n      keys.push(\r\n        <KeySwitch\r\n          key={keyLabel}\r\n          label={keyLabel}\r\n          x={attrs.x} y={attrs.y}\r\n          w={attrs.w} h={attrs.h}\r\n          isSelected={keyLabel === selectedKey}\r\n          onDrag={(e, ui) => this.handleSwitchDrag(e, ui)}\r\n          onClick={(e) => this.handleSwitchClick(keyLabel)}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <EditPanel\r\n          selectedKey={selectedKey}\r\n          selectedAttrs={layout[selectedKey]}\r\n          onAddSwitchClick={() => this.handleAddSwitch()}\r\n          onRemoveSwitchClick={() => this.handleRemoveSwitch()}\r\n          onSizeChange={(e) => this.handleSizeChange(e)}\r\n          onLabelChange={(e) => this.handleLabelChange(e)}\r\n          onDownloadClick={() => this.handleDownloadClick()}\r\n          onLayoutFileChange={(e) => this.handleLayoutFileChange(e)}\r\n        />\r\n        <div className='key-plate' style={stylePlate}>\r\n          {keys}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Mechanical Keyboard Layout Editor</h1>\r\n      <KeyPlate />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}