{"version":3,"sources":["utils/LayoutUtil.js","components/EditPanel.js","components/KeySwitch.js","components/LayoutMenuEmailDialog.js","components/LayoutMenuPredefinedDialog.js","components/LayoutMenu.js","components/KeyPlate.js","routes/Home.js","routes/About.js","components/AboutDialog.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["PLATE_PADDING","UNIT_1","keyPosition","x","y","keySize","w","h","width","height","plateSize","newLayout","in_unit","newWidth","newHeight","val","end","bottom","EditPanel","props","layoutState","selectedState","handleSizeChange","e","get","target","value","newValue","Number","roundValue","Math","round","id","set","console","log","className","FormControl","TextField","label","onChange","InputLabel","htmlFor","Select","native","IconButton","alt","onClick","merge","max","AddBox","none","IndeterminateCheckBox","KeySwitch","keyState","selectedClassName","seq","grid","bounds","left","LayoutUtil","top","position","onDrag","ui","p","deltaX","deltaY","style","LayoutMenuEmailDialog","openState","onConfirm","emailState","useState","validState","handleClose","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","Typography","autoFocus","margin","type","fullWidth","inputEmail","test","String","toLowerCase","DialogContentText","DialogActions","Button","color","LayoutMenuPredefinedDialog","dialogState","onSelect","List","predefinedList","map","layout","idx","ListItem","button","ListItemText","primary","HOST","_makeLayoutObj","email_to","LayoutMenu","loadingState","emailDialogState","fmt","layoutListDialogState","handlePredefinedClick","a","axios","result","data","handlePredefinedLayoutSelect","fname","handleGenerateModelClick","handleConfirmEmailClick","email","post","CircularProgress","variant","preventDefault","fileSelector","document","createElement","setAttribute","onchange","e1","reader","FileReader","readAsBinaryString","files","onloadend","JSON","parse","click","stringify","FileSaver","saveAs","Blob","KeyPlate","plateSizeInUnit","index","length","Home","About","AboutDialog","React","setOpen","right","aria-describedby","href","Header","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05597715.chunk.js","sourcesContent":["export const PLATE_PADDING = 15;\nexport const UNIT_1 = 60;\nexport const UNIT_0_25 = UNIT_1 / 4;\n\nexport function keyPosition(x, y) {\n  return {\n    x: x * UNIT_1 + PLATE_PADDING,\n    y: y * UNIT_1 + PLATE_PADDING,\n  };\n}\n\nexport function keySize(w, h) {\n  return {\n    width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n    height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n  };\n}\n\nexport function plateSize(newLayout, in_unit = false) {\n  let newWidth = 0;\n  let newHeight = 0;\n  for (const val of newLayout) {\n    const end = val.x + val.w;\n    newWidth = (end > newWidth) ? end : newWidth;\n    const bottom = val.y + val.h;\n    newHeight = (bottom > newHeight) ? bottom : newHeight;\n  }\n\n  return {\n    width: in_unit ? newWidth : (newWidth * UNIT_1 + PLATE_PADDING * 2),\n    height: in_unit ? newHeight : (newHeight * UNIT_1 + PLATE_PADDING * 2),\n  };\n}\n","import './HorizontalBar.css';\nimport './EditPanel.css';\n\nimport { none } from '@hookstate/core';\nimport { IconButton, FormControl, InputLabel, TextField, Select } from '@material-ui/core';\nimport { AddBox, IndeterminateCheckBox } from '@material-ui/icons';\n\nimport { plateSize } from '../utils/LayoutUtil';\n\n\nfunction EditPanel(props) {\n  const { layoutState, selectedState } = props;\n\n  const handleLabelChange = (e) => {\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n\n    layoutState[selectedState.get()].label.set(e.target.value);\n  };\n\n  const handleSizeChange = (e) => {\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n    // 예외 처리: 키가 선택된 상태에서 크기 없음 선택 불가\n    if (e.target.value === '') {\n      return;\n    }\n\n    // 넓이 또는 높이 크기 변경\n    const newValue = Number(e.target.value);\n    const roundValue = Math.round(newValue * 100) / 100;\n    if (e.target.id === 'selected-key-width') {\n      layoutState[selectedState.get()].w.set(roundValue);\n    } else if (e.target.id === 'selected-key-height') {\n      layoutState[selectedState.get()].h.set(roundValue);\n    } else {\n      console.log('>>>>> undefined id: ' + e.target.id);\n      return;\n    }\n  };\n\n  const handleAddSwitch = () => {\n    const { width, height } = plateSize(layoutState.get(), true);\n    layoutState.merge([{\n      'label': 'New Key',\n      'x': width,  // right end 배치\n      'y': Math.max(height - 1, 0),  // bottom align 배치\n      'w': 1,\n      'h': 1,\n    }]);\n  };\n\n  const handleRemoveSwitch = () => {\n    // 예외 처리: 선택된 키가 없다면 동작 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n\n    layoutState[selectedState.get()].set(none);\n    selectedState.set(-1);\n  };\n\n  return (\n    <div className='editpanel'>\n      <div className='hbar__container'>\n        <FormControl className='hbar__item'>\n          <TextField\n            id='selected-key-label'\n            label='Key Label'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].label.get()}\n            onChange={handleLabelChange}\n          />\n        </FormControl>\n        <FormControl className='hbar__item'>\n          <InputLabel htmlFor='select-key-width'>Width</InputLabel>\n          <Select\n            native\n            id='selected-key-width'\n            label='Width'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].w.get()}\n            onChange={handleSizeChange}\n          >\n            <option value=''></option>\n            <option value='1'>1U</option>\n            <option value='1.25'>1.25U</option>\n            <option value='1.5'>1.5U</option>\n            <option value='1.75'>1.75U</option>\n            <option value='2'>2U</option>\n            <option value='2.25'>2.25U</option>\n            <option value='2.75'>2.75U</option>\n            <option value='6'>6U</option>\n            <option value='6.25'>6.25U</option>\n            <option value='6.5'>6.5U</option>\n            <option value='7'>7U</option>\n          </Select>\n        </FormControl>\n        <FormControl className='hbar__item'>\n          <InputLabel htmlFor='select-key-height'>Height</InputLabel>\n          <Select\n            native\n            id='selected-key-height'\n            label='Height'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].h.get()}\n            onChange={handleSizeChange}\n          >\n            <option value=''></option>\n            <option value='1'>1U</option>\n            <option value='2'>2U</option>\n          </Select>\n        </FormControl>\n        <IconButton\n          className='hbar__item editpanel__imageicon'\n          alt='Add New Switch'\n          onClick={handleAddSwitch}\n        >\n          <AddBox />\n        </IconButton>\n        <IconButton\n          className='hbar__item editpanel__imageicon'\n          alt='Remove Selected Switch'\n          onClick={handleRemoveSwitch}\n        >\n          <IndeterminateCheckBox />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default EditPanel;\n","import React from 'react';\nimport Draggable from 'react-draggable';\n\nimport * as LayoutUtil from '../utils/LayoutUtil';\nimport './KeySwitch.css';\n\n\nfunction KeySwitch(props) {\n  const { label, x, y, w, h } = props.keyState;\n  const selectedState = props.selectedState;\n\n  const selectedClassName = selectedState.get() === props.seq ? 'key-switch-selected' : '';\n  const handleDrag = (e, ui) => {\n    x.set(p => p + (ui.deltaX / LayoutUtil.UNIT_1));\n    y.set(p => p + (ui.deltaY / LayoutUtil.UNIT_1));\n  };\n  const handleClick = () => {\n    // 키 스위치 클릭 시 선택 및 해제하도록 변경\n    selectedState.set(p => (p === props.seq) ? -1 : props.seq);\n  };\n  return (\n    <Draggable\n      grid={[LayoutUtil.UNIT_0_25, LayoutUtil.UNIT_0_25]}\n      bounds={{left: LayoutUtil.PLATE_PADDING, top: LayoutUtil.PLATE_PADDING}}\n      position={LayoutUtil.keyPosition(x.get(), y.get())}\n      onDrag={handleDrag}\n    >\n      <div\n        className={`key-switch ${selectedClassName}`}\n        style={LayoutUtil.keySize(w.get(), h.get())}\n        onClick={handleClick}\n      >\n        {label.get()}\n      </div>\n    </Draggable>\n  );\n}\n\nexport default KeySwitch;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useState } from '@hookstate/core';\n\n\nexport default function LayoutMenuEmailDialog(props) {\n  const { openState, onConfirm } = props;\n  const emailState = useState('');\n  const validState = useState(false);\n\n  const handleClose = () => {\n    openState.set(false);\n  }\n\n  const handleChange = (e) => {\n    const inputEmail = e.target.value;\n\n    // 이메일 유효성 체크\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    validState.set(re.test(String(inputEmail).toLowerCase()));\n    emailState.set(validState.get() ? inputEmail : '');\n  }\n\n  const handleConfirmClick = () => {\n    if (validState.get()) {\n      handleClose();\n      onConfirm(emailState.get());\n    }\n  };\n\n  return (\n    <div>\n      <Dialog open={openState.get()} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Generate Model</DialogTitle>\n        <DialogContent>\n          <Typography>\n            생성된 모델 파일을 받으실 이메일 주소를 입력해주세요.\n          </Typography>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange}\n          />\n          {validState.get() ? '' : <DialogContentText>유효하지 않은 이메일입니다.</DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmClick} color=\"primary\">\n            Generate\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\n\nexport default function LayoutMenuPredefinedDialog(props) {\n  const { dialogState, onSelect } = props;\n\n  const handleClose = () => {\n    dialogState.open.set(false);\n  };\n\n  const handleListItemClick = (value) => {\n    onSelect(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogState.open.get()}>\n      <DialogTitle id=\"simple-dialog-title\">Choose Predefined Layout</DialogTitle>\n      <List>\n        {dialogState.predefinedList.get().map((layout, idx) => (\n          <ListItem button onClick={() => handleListItemClick(layout)} key={idx}>\n            <ListItemText primary={layout} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n","import './HorizontalBar.css';\nimport './LayoutMenu.css';\n\nimport { useState } from '@hookstate/core';\nimport { Button, CircularProgress } from '@material-ui/core';\n\nimport axios from 'axios';\nimport FileSaver from 'file-saver';\n\nimport LayoutMenuEmailDialog from './LayoutMenuEmailDialog';\nimport LayoutMenuPredefinedDialog from './LayoutMenuPredefinedDialog';\nimport { plateSize } from '../utils/LayoutUtil';\n\n\nconst HOST = 'https://diy-mechanical-keyboard.herokuapp.com';\n\nfunction _makeLayoutObj(layout, email_to = '') {\n  return {\n    ...plateSize(layout, true),\n    layout: layout,\n    email_to: email_to,\n  };\n}\n\nfunction LayoutMenu(props) {\n  const { layoutState, selectedState } = props;\n  const loadingState = useState(false);\n\n  const emailDialogState = useState({\n    open: false,\n    fmt: '',\n  });\n\n  const layoutListDialogState = useState({\n    open: false,\n    predefinedList: [],\n  });\n\n  const handlePredefinedClick = async () => {\n    loadingState.set(true);\n\n    const { data: { result } } = await axios.get(`${HOST}/layout`);\n    layoutListDialogState.predefinedList.set(result);\n    layoutListDialogState.open.set(true);\n\n    loadingState.set(false);\n  };\n\n  const handlePredefinedLayoutSelect = async (fname) => {\n    loadingState.set(true);\n\n    const { data: { result } } = await axios.get(`${HOST}/layout/${fname}`);\n    selectedState.set(-1);\n    layoutState.set(result.layout);\n    layoutListDialogState.open.set(false);\n\n    loadingState.set(false);\n  };\n\n  const handleUploadClick = (e) => {\n    e.preventDefault();\n\n    const handleOnChange = (e1) => {\n      const reader = new FileReader();\n      reader.readAsBinaryString(e1.target.files[0]);\n      reader.onloadend = () => {\n        const { layout } = JSON.parse(reader.result);\n        selectedState.set(-1);\n        layoutState.set(layout);\n      };\n    };\n\n    const fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n    fileSelector.setAttribute('accept', '.json');\n    fileSelector.onchange = handleOnChange;\n    fileSelector.click();\n  };\n\n  const handleDownloadClick = () => {\n    const data = JSON.stringify(_makeLayoutObj(layoutState.get()));\n    FileSaver.saveAs(\n      new Blob([data], { type: 'text/json; charset=utf-8' }),\n      'layout.json'\n    );\n  };\n\n  const handleGenerateModelClick = (fmt) => {\n    if (loadingState.get()) {\n      console.log('prevent duplicated click!');\n      return;\n    }\n\n    emailDialogState.fmt.set(fmt);\n    emailDialogState.open.set(true);\n  };\n\n  const handleConfirmEmailClick = async (email) => {\n    loadingState.set(true);\n\n    const { data } = await axios.post(\n      `${HOST}/model/all/${emailDialogState.fmt.get()}`,\n      _makeLayoutObj(layoutState.get(), email)\n    );\n    console.log(data);\n\n    loadingState.set(false);\n  };\n\n  return (\n    <div className='layoutmenu'>\n      {loadingState.get() ? <div className='loading'><CircularProgress /></div> : ''}\n      <LayoutMenuEmailDialog\n        openState={emailDialogState.open}\n        onConfirm={handleConfirmEmailClick}\n      />\n      <LayoutMenuPredefinedDialog\n        dialogState={layoutListDialogState}\n        onSelect={handlePredefinedLayoutSelect}\n      />\n      <div className='hbar__container'>\n        <Button\n          className='hbar__item'\n          variant='outlined'\n          color='primary'\n          onClick={handlePredefinedClick}\n        >\n          Predefined Layout\n        </Button>\n        <Button\n          className='hbar__item'\n          variant='outlined'\n          color='primary'\n          onClick={handleUploadClick}\n        >\n          Upload Layout\n        </Button>\n        <Button\n          className='hbar__item'\n          variant='outlined'\n          color='primary'\n          onClick={handleDownloadClick}\n        >\n          Download Layout\n        </Button>\n        <Button\n          className='hbar__item'\n          variant='contained'\n          color='primary'\n          onClick={() => handleGenerateModelClick('stl')}\n        >\n          Generate STL (3D)\n        </Button>\n        <Button\n          className='hbar__item'\n          variant='contained'\n          color='primary'\n          onClick={() => handleGenerateModelClick('dxf')}\n        >\n          Generate DXF (2D)\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default LayoutMenu;\n","import './KeyPlate.css';\n\nimport { useState } from '@hookstate/core';\n\nimport { plateSize } from '../utils/LayoutUtil';\nimport EditPanel from './EditPanel';\nimport KeySwitch from './KeySwitch';\nimport LayoutMenu from './LayoutMenu';\n\n\nfunction KeyPlate() {\n  const layoutState = useState([\n    { label: 'New Key', w: 1, h: 1, x: 0, y: 0 },\n  ]);\n  const selectedState = useState(-1);\n  const plateSizeInUnit = plateSize(layoutState.get(), true);\n\n  return (\n    <div>\n      <LayoutMenu\n        layoutState={layoutState}\n        selectedState={selectedState}\n      />\n      <EditPanel\n        layoutState={layoutState}\n        selectedState={selectedState}\n      />\n      <div\n        className='key-plate'\n        style={plateSize(layoutState.get())}>\n        {layoutState.map((keyState, index) =>\n          <KeySwitch\n            key={index}\n            seq={index}\n            keyState={keyState}\n            selectedState={selectedState}\n          />\n        )}\n      </div>\n      <div className='key-plate-info'>\n        {layoutState.length} keys on {plateSizeInUnit.width}U x {plateSizeInUnit.height}U\n      </div>\n    </div >\n  );\n}\n\nexport default KeyPlate;\n","import './Home.css';\n\nimport KeyPlate from '../components/KeyPlate';\n\n\nfunction Home() {\n  return (\n    <div className='home'>\n      <KeyPlate />\n    </div>\n  );\n}\n\nexport default Home;\n","import './About.css';\n\nconst About = () => (\n  <div className='about'>\n    about...\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InfoIcon from '@material-ui/icons/Info';\n\nexport default function AboutDialog() {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div style={{ position: 'fixed', right: '5px', top: '5px' }}>\n        <IconButton variant='outlined' color='default' onClick={handleClickOpen}>\n          <InfoIcon />\n        </IconButton>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='about-dialog-title'\n        aria-describedby='about-dialog-description'\n      >\n        <DialogTitle id='about-dialog-title'>About This App</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='about-dialog-description'>\n            Mechanical Keyboard Layout Editor은 기계식 키보드를 DIY로 제작하기 위해\n            키 스위치를 사용자가 원하는 대로 배치하고 이를 3D프린터(또는 CNC조각기)로 출력할 수 있도록\n            STL 형식의 3D 모델링 또는 DXF 형식의 2D 모델링 파일을 생성해줍니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            생성되는 모델링 파일의 종류는\n            1) 키 스위치를 꽂을 수 있는 보강판\n            2) PCB 용도의 하판\n            3) 케이스\n            입니다.\n            키 스위치, 스테빌라이저 및 키캡은 기성품을 구매하여 조립이 필요하며 Cherry MX, Kailh 스위치 등이 호환됩니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            사용자가 디자인한 키 레이아웃 및 모델링의 소유권은 모두 이를 디자인한 사용자에게 있습니다.\n            또한, 생성된 3D 모델링 파일로 출력 시 발생할 수 있는 모든 문제는 사용자에게 책임이 있습니다.\n            제가 참고한 키 스위치 및 스테빌라이저에 맞도록 설계가 되었으므로 다른 부품과는 호환이 되지 않을 수 있습니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            발견하신 이슈 및 개선 사항, 또는 문의 사항이 있으시면,&nbsp;\n            <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>GitHub issue</a>\n            &nbsp;혹은&nbsp;\n            <a href='mailto:sinjin.jang0.gmail.com'>e-mail</a>로 알려주세요.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            <p>알고 있는 이슈 사항:</p>\n            <ul>\n              <li>2022/08/23: <b>많은 키들을 배치하실 경우 도면 생성에 실패하는 경우가 있습니다. (무료 서버로 인한 서버 사양 부족) 다른 대안을 찾고 있는 중이니, 혹시 도면 생성 작업이 필요하시면 메일로 연락 부탁드립니다.</b></li>\n              <li>넓이가 6U~7U 크기인 키 스위치의 스테빌라이저 홀이 2U 크기로 생성</li>\n            </ul>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary' autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import './Header.css';\n\nimport AboutDialog from './AboutDialog';\n\nconst Header = () => (\n  <header>\n    <p className='app_name'>Mechanical Keyboard Layout Editor</p>\n    <AboutDialog />\n  </header>\n);\n\nexport default Header;\n","import './Footer.css';\nimport React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className='footer'>\n      <div className='footer__item'>\n        Copyright©2021 Sinjin Jang<br />All rights reserved.\n      </div>\n      <div className='footer__item'>\n        Get source code of this app:<br />\n        <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>mechanical-keyboard-layout-editor on GitHub</a>\n      </div>\n      <div className='footer__item'>\n        <a href='https://donaricano.com/mypage/1722367584_zHWZl2' target='_blank'>도네리카노 커피 후원</a><br />\n        <a href='https://www.buymeacoffee.com/sinjin0' target='_blank'>Buy Me a Coffee</a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { HashRouter, Route } from 'react-router-dom';\n\nimport Home from './routes/Home';\nimport About from './routes/About';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Navigation from './components/Navigation';\n\nconst App = () => (\n  <>\n    <Header />\n    <HashRouter>\n      {/* <Navigation /> */}\n      <Route exact path='/' component={Home} />\n      <Route path='/about' component={About} />\n    </HashRouter>\n    <Footer />\n  </>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}