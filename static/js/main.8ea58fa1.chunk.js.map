{"version":3,"sources":["utils/LayoutUtil.js","components/EditPanelEmailDialog.js","components/EditPanelLayoutListDialog.js","components/EditPanel.js","components/KeySwitch.js","components/KeyPlate.js","routes/Home.js","routes/About.js","components/AboutDialog.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["PLATE_PADDING","UNIT_1","keyPosition","x","y","keySize","w","h","width","height","plateSize","newLayout","in_unit","newWidth","newHeight","val","end","bottom","EditPanelEmailDialog","props","openState","onConfirm","emailState","useState","validState","handleClose","set","Dialog","open","get","onClose","aria-labelledby","DialogTitle","id","DialogContent","Typography","TextField","autoFocus","margin","label","type","fullWidth","onChange","e","inputEmail","target","value","test","String","toLowerCase","DialogContentText","DialogActions","Button","onClick","color","EditPanelLayoutListDialog","dialogState","onSelect","List","predefinedList","map","layout","idx","ListItem","button","ListItemText","primary","HOST","_makeLayoutObj","email_to","EditPanel","layoutState","selectedState","loadingState","emailDialogState","fmt","layoutListDialogState","handlePredefinedClick","a","axios","result","data","handlePredefinedLayoutSelect","fname","handleGenerateModelClick","console","log","handleConfirmEmailClick","email","post","handleSizeChange","newValue","Number","className","CircularProgress","variant","preventDefault","fileSelector","document","createElement","setAttribute","onchange","e1","reader","FileReader","readAsBinaryString","files","onloadend","JSON","parse","click","stringify","FileSaver","saveAs","Blob","FormControl","InputLabel","htmlFor","Select","native","IconButton","alt","merge","Math","max","AddBox","none","IndeterminateCheckBox","KeySwitch","keyState","selectedClassName","seq","grid","bounds","left","LayoutUtil","top","position","onDrag","ui","p","deltaX","deltaY","style","KeyPlate","index","Home","About","AboutDialog","React","setOpen","right","aria-describedby","href","Header","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ea58fa1.chunk.js","sourcesContent":["export const PLATE_PADDING = 15;\r\nexport const UNIT_1 = 60;\r\nexport const UNIT_0_25 = UNIT_1 / 4;\r\n\r\nexport function keyPosition(x, y) {\r\n  return {\r\n    x: x * UNIT_1 + PLATE_PADDING,\r\n    y: y * UNIT_1 + PLATE_PADDING,\r\n  };\r\n}\r\n\r\nexport function keySize(w, h) {\r\n  return {\r\n    width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n    height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n  };\r\n}\r\n\r\nexport function plateSize(newLayout, in_unit = false) {\r\n  let newWidth = 0;\r\n  let newHeight = 0;\r\n  for (const val of newLayout) {\r\n    const end = val.x + val.w;\r\n    newWidth = (end > newWidth) ? end : newWidth;\r\n    const bottom = val.y + val.h;\r\n    newHeight = (bottom > newHeight) ? bottom : newHeight;\r\n  }\r\n\r\n  return {\r\n    width: in_unit ? newWidth : (newWidth * UNIT_1 + PLATE_PADDING * 2),\r\n    height: in_unit ? newHeight : (newHeight * UNIT_1 + PLATE_PADDING * 2),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useState } from '@hookstate/core';\r\n\r\n\r\nexport default function EditPanelEmailDialog(props) {\r\n  const { openState, onConfirm } = props;\r\n  const emailState = useState('');\r\n  const validState = useState(false);\r\n\r\n  const handleClose = () => {\r\n    openState.set(false);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const inputEmail = e.target.value;\r\n\r\n    // 이메일 유효성 체크\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    validState.set(re.test(String(inputEmail).toLowerCase()));\r\n    emailState.set(validState.get() ? inputEmail : '');\r\n  }\r\n\r\n  const handleConfirmClick = () => {\r\n    if (validState.get()) {\r\n      handleClose();\r\n      onConfirm(emailState.get());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={openState.get()} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Generate Model</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            생성된 모델 파일을 받으실 이메일 주소를 입력해주세요.\r\n          </Typography>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n          />\r\n          {validState.get() ? '' : <DialogContentText>유효하지 않은 이메일입니다.</DialogContentText>}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmClick} color=\"primary\">\r\n            Generate\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\n\r\nexport default function EditPanelLayoutListDialog(props) {\r\n  const { dialogState, onSelect } = props;\r\n\r\n  const handleClose = () => {\r\n    dialogState.open.set(false);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogState.open.get()}>\r\n      <DialogTitle id=\"simple-dialog-title\">Choose Predefined Layout</DialogTitle>\r\n      <List>\r\n        {dialogState.predefinedList.get().map((layout, idx) => (\r\n          <ListItem button onClick={() => handleListItemClick(layout)} key={idx}>\r\n            <ListItemText primary={layout} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import './EditPanel.css';\r\n\r\nimport { useState, none } from '@hookstate/core';\r\nimport { Button, IconButton, FormControl, InputLabel, TextField, Select, MenuItem, CircularProgress } from '@material-ui/core';\r\nimport { AddBox, IndeterminateCheckBox } from '@material-ui/icons';\r\n\r\nimport axios from 'axios';\r\nimport FileSaver from 'file-saver';\r\n\r\nimport { plateSize } from '../utils/LayoutUtil';\r\nimport EditPanelEmailDialog from './EditPanelEmailDialog';\r\nimport EditPanelLayoutListDialog from './EditPanelLayoutListDialog';\r\n\r\n\r\nconst HOST = 'https://diy-mechanical-keyboard.herokuapp.com';\r\n\r\n\r\nfunction _makeLayoutObj(layout, email_to = '') {\r\n  return {\r\n    ...plateSize(layout, true),\r\n    layout: layout,\r\n    email_to: email_to,\r\n  };\r\n}\r\n\r\n\r\nfunction EditPanel(props) {\r\n  const { layoutState, selectedState } = props;\r\n  const loadingState = useState(false);\r\n\r\n  const emailDialogState = useState({\r\n    open: false,\r\n    fmt: '',\r\n  });\r\n\r\n  const layoutListDialogState = useState({\r\n    open: false,\r\n    predefinedList: [],\r\n  });\r\n\r\n  const handlePredefinedClick = async () => {\r\n    loadingState.set(true);\r\n\r\n    const { data: { result } } = await axios.get(`${HOST}/layout`);\r\n    layoutListDialogState.predefinedList.set(result);\r\n    layoutListDialogState.open.set(true);\r\n\r\n    loadingState.set(false);\r\n  };\r\n\r\n  const handlePredefinedLayoutSelect = async (fname) => {\r\n    loadingState.set(true);\r\n\r\n    const { data: { result } } = await axios.get(`${HOST}/layout/${fname}`);\r\n    selectedState.set(-1);\r\n    layoutState.set(result.layout);\r\n    layoutListDialogState.open.set(false);\r\n\r\n    loadingState.set(false);\r\n  };\r\n\r\n  const handleUploadClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    const handleOnChange = (e1) => {\r\n      const reader = new FileReader();\r\n      reader.readAsBinaryString(e1.target.files[0]);\r\n      reader.onloadend = () => {\r\n        const { layout } = JSON.parse(reader.result);\r\n        selectedState.set(-1);\r\n        layoutState.set(layout);\r\n      };\r\n    };\r\n\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('accept', '.json');\r\n    fileSelector.onchange = handleOnChange;\r\n    fileSelector.click();\r\n  };\r\n\r\n  const handleDownloadClick = () => {\r\n    const data = JSON.stringify(_makeLayoutObj(layoutState.get()));\r\n    FileSaver.saveAs(\r\n      new Blob([data], { type: 'text/json; charset=utf-8' }),\r\n      'layout.json'\r\n    );\r\n  };\r\n\r\n  const handleGenerateModelClick = (fmt) => {\r\n    if (loadingState.get()) {\r\n      console.log('prevent duplicated click!');\r\n      return;\r\n    }\r\n\r\n    emailDialogState.fmt.set(fmt);\r\n    emailDialogState.open.set(true);\r\n  };\r\n\r\n  const handleConfirmEmailClick = async (email) => {\r\n    loadingState.set(true);\r\n\r\n    const { data } = await axios.post(\r\n      `${HOST}/model/plate/${emailDialogState.fmt.get()}`,\r\n      _makeLayoutObj(layoutState.get(), email)\r\n    );\r\n    console.log(data);\r\n\r\n    loadingState.set(false);\r\n  };\r\n\r\n  const handleLabelChange = (e) => {\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n\r\n    layoutState[selectedState.get()].label.set(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n    // 예외 처리: 키가 선택된 상태에서 크기 없음 선택 불가\r\n    if (e.target.value === '') {\r\n      return;\r\n    }\r\n\r\n    // 넓이 또는 높이 크기 변경\r\n    const newValue = Number(e.target.value);\r\n    if (e.target.id === 'selected-key-width') {\r\n      layoutState[selectedState.get()].w.set(newValue);\r\n    } else if (e.target.id === 'selected-key-height') {\r\n      layoutState[selectedState.get()].h.set(newValue);\r\n    } else {\r\n      console.log('>>>>> undefined id: ' + e.target.id);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleAddSwitch = () => {\r\n    const { width, height } = plateSize(layoutState.get(), true);\r\n    layoutState.merge([{\r\n      'label': 'New Key',\r\n      'x': width,  // right end 배치\r\n      'y': Math.max(height - 1, 0),  // bottom align 배치\r\n      'w': 1,\r\n      'h': 1,\r\n    }]);\r\n  };\r\n\r\n  const handleRemoveSwitch = () => {\r\n    // 예외 처리: 선택된 키가 없다면 동작 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n\r\n    layoutState[selectedState.get()].set(none);\r\n    selectedState.set(-1);\r\n  };\r\n\r\n  return (\r\n    <div className='editpanel'>\r\n      {loadingState.get() ? <div className='loading'><CircularProgress /></div> : ''}\r\n      <EditPanelEmailDialog\r\n        openState={emailDialogState.open}\r\n        onConfirm={handleConfirmEmailClick}\r\n      />\r\n      <EditPanelLayoutListDialog\r\n        dialogState={layoutListDialogState}\r\n        onSelect={handlePredefinedLayoutSelect}\r\n      />\r\n      <div className='editpanel__container'>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handlePredefinedClick}\r\n        >\r\n          Predefined Layout\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handleUploadClick}\r\n        >\r\n          Upload Layout\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handleDownloadClick}\r\n        >\r\n          Download Layout\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={() => handleGenerateModelClick('stl')}\r\n        >\r\n          Generate STL (3D)\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={() => handleGenerateModelClick('dxf')}\r\n        >\r\n          Generate DXF (2D)\r\n        </Button>\r\n      </div>\r\n      <div className='editpanel__container'>\r\n        <FormControl className='editpanel__item'>\r\n          <TextField\r\n            id='selected-key-label'\r\n            label='Key Label'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].label.get()}\r\n            onChange={handleLabelChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl className='editpanel__item'>\r\n          <InputLabel htmlFor='select-key-width'>Width</InputLabel>\r\n          <Select\r\n            native\r\n            id='selected-key-width'\r\n            label='Width'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].w.get()}\r\n            onChange={handleSizeChange}\r\n          >\r\n            <option value=''></option>\r\n            <option value='1'>1U</option>\r\n            <option value='1.25'>1.25U</option>\r\n            <option value='1.5'>1.5U</option>\r\n            <option value='1.75'>1.75U</option>\r\n            <option value='2'>2U</option>\r\n            <option value='2.25'>2.25U</option>\r\n            <option value='2.75'>2.75U</option>\r\n            <option value='6'>6U</option>\r\n            <option value='6.25'>6.25U</option>\r\n            <option value='6.5'>6.5U</option>\r\n            <option value='7'>7U</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className='editpanel__item'>\r\n          <InputLabel htmlFor='select-key-height'>Height</InputLabel>\r\n          <Select\r\n            native\r\n            id='selected-key-height'\r\n            label='Height'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].h.get()}\r\n            onChange={handleSizeChange}\r\n          >\r\n            <option value=''></option>\r\n            <option value='1'>1U</option>\r\n            <option value='2'>2U</option>\r\n          </Select>\r\n        </FormControl>\r\n        <IconButton\r\n          className='editpanel__item editpanel__imageicon'\r\n          alt='Add New Switch'\r\n          onClick={handleAddSwitch}\r\n        >\r\n          <AddBox />\r\n        </IconButton>\r\n        <IconButton\r\n          className='editpanel__item editpanel__imageicon'\r\n          alt='Remove Selected Switch'\r\n          onClick={handleRemoveSwitch}\r\n        >\r\n          <IndeterminateCheckBox />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPanel;\r\n","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as LayoutUtil from '../utils/LayoutUtil';\r\nimport './KeySwitch.css';\r\n\r\n\r\nfunction KeySwitch(props) {\r\n  const { label, x, y, w, h } = props.keyState;\r\n  const selectedState = props.selectedState;\r\n\r\n  const selectedClassName = selectedState.get() === props.seq ? 'key-switch-selected' : '';\r\n  const handleDrag = (e, ui) => {\r\n    x.set(p => p + (ui.deltaX / LayoutUtil.UNIT_1));\r\n    y.set(p => p + (ui.deltaY / LayoutUtil.UNIT_1));\r\n  };\r\n  const handleClick = () => {\r\n    // 키 스위치 클릭 시 선택 및 해제하도록 변경\r\n    selectedState.set(p => (p === props.seq) ? -1 : props.seq);\r\n  };\r\n  return (\r\n    <Draggable\r\n      grid={[LayoutUtil.UNIT_0_25, LayoutUtil.UNIT_0_25]}\r\n      bounds={{left: LayoutUtil.PLATE_PADDING, top: LayoutUtil.PLATE_PADDING}}\r\n      position={LayoutUtil.keyPosition(x.get(), y.get())}\r\n      onDrag={handleDrag}\r\n    >\r\n      <div\r\n        className={`key-switch ${selectedClassName}`}\r\n        style={LayoutUtil.keySize(w.get(), h.get())}\r\n        onClick={handleClick}\r\n      >\r\n        {label.get()}\r\n      </div>\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default KeySwitch;\r\n","import './KeyPlate.css';\r\n\r\nimport { useState } from '@hookstate/core';\r\n\r\nimport { plateSize } from '../utils/LayoutUtil';\r\nimport EditPanel from './EditPanel';\r\nimport KeySwitch from './KeySwitch';\r\n\r\n\r\nfunction KeyPlate() {\r\n  const layoutState = useState([\r\n    { label: 'New Key', w: 1, h: 1, x: 0, y: 0 },\r\n  ]);\r\n  const selectedState = useState(-1);\r\n\r\n  return (\r\n    <div>\r\n      <EditPanel\r\n        layoutState={layoutState}\r\n        selectedState={selectedState}\r\n      />\r\n      <div\r\n        className='key-plate'\r\n        style={plateSize(layoutState.get())}>\r\n        {layoutState.map((keyState, index) =>\r\n          <KeySwitch\r\n            key={index}\r\n            seq={index}\r\n            keyState={keyState}\r\n            selectedState={selectedState}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyPlate;\r\n","import './Home.css';\r\n\r\nimport KeyPlate from '../components/KeyPlate';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='home'>\r\n      <KeyPlate />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './About.css';\r\n\r\nconst About = () => (\r\n  <div className='about'>\r\n    about...\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nexport default function AboutDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: 'fixed', right: '5px', top: '5px' }}>\r\n        <IconButton variant='outlined' color='default' onClick={handleClickOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='about-dialog-title'\r\n        aria-describedby='about-dialog-description'\r\n      >\r\n        <DialogTitle id='about-dialog-title'>About This App</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='about-dialog-description'>\r\n            Mechanical Keyboard Layout Editor은 기계식 키보드를 DIY로 제작하기 위해\r\n            키 스위치를 사용자가 원하는 대로 배치하고 이를 3D프린터(또는 CNC조각기)로 출력할 수 있도록\r\n            STL 형식의 3D 모델링 또는 DXF 형식의 2D 모델링 파일을 생성해줍니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            현재는 키 스위치를 꽂을 수 있는 상판(plate)의 모델링 파일을 생성해주며,\r\n            PCB 용도의 하판도 생성을 할수 있도록 고려 중입니다.\r\n            키 스위치 및 키캡은 기성품을 구매하여 조립이 필요하며 Cherry MX, Kailh 스위치 등이 호환됩니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            사용자가 디자인한 키 레이아웃 및 모델링의 소유권은 모두 이를 디자인한 사용자에게 있습니다.\r\n            또한, 생성된 3D 모델링 파일로 출력 시 발생할 수 있는 모든 문제는 사용자에게 책임이 있습니다.\r\n            제가 참고한 키 스위치 및 스테빌라이저에 맞도록 설계가 되었으므로 다른 부품과는 호환에 문제가 있을 수 있습니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            발견하신 이슈 및 개선 사항, 또는 문의 사항이 있으시면,&nbsp;\r\n            <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>GitHub issue</a>\r\n            &nbsp;혹은&nbsp;\r\n            <a href='mailto:sinjin.jang0.gmail.com'>e-mail</a>로 알려주세요.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            <p>알고 있는 이슈 사항:</p>\r\n            <ul>\r\n              <li>넓이가 6U~7U 크기인 키 스위치의 스테빌라이저 홀이 2U 크기로 생성</li>\r\n              <li>PCB-mount 스테빌라이저에서 plate-mount 스테빌라이저로 변경 예정</li>\r\n            </ul>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary' autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import './Header.css';\r\n\r\nimport AboutDialog from './AboutDialog';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <p className='app_name'>Mechanical Keyboard Layout Editor</p>\r\n    <AboutDialog />\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import './Footer.css';\r\nimport React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='footer__item'>\r\n        Copyright©2021 Sinjin Jang<br />All rights reserved.\r\n      </div>\r\n      <div className='footer__item'>\r\n        Get source code of this app:<br />\r\n        <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>mechanical-keyboard-layout-editor on GitHub</a>\r\n      </div>\r\n      <div className='footer__item'>\r\n        <a href='https://donaricano.com/mypage/1722367584_zHWZl2' target='_blank'>도네리카노 커피 후원</a><br />\r\n        <a href='https://www.buymeacoffee.com/sinjin0' target='_blank'>Buy Me a Coffee</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './routes/Home';\r\nimport About from './routes/About';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Navigation from './components/Navigation';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <HashRouter>\r\n      {/* <Navigation /> */}\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/about' component={About} />\r\n    </HashRouter>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}