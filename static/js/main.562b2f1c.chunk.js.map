{"version":3,"sources":["utils/LayoutUtil.js","components/EditPanelEmailDialog.js","components/EditPanel.js","components/KeySwitch.js","components/KeyPlate.js","routes/Home.js","routes/About.js","components/AboutDialog.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["PLATE_PADDING","UNIT_1","keyPosition","x","y","keySize","w","h","width","height","plateSize","newLayout","in_unit","newWidth","newHeight","val","end","bottom","EditPanelEmailDialog","props","openState","onConfirm","emailState","useState","validState","handleClose","set","Dialog","open","get","onClose","aria-labelledby","DialogTitle","id","DialogContent","Typography","TextField","autoFocus","margin","label","type","fullWidth","onChange","e","inputEmail","target","value","test","String","toLowerCase","DialogContentText","DialogActions","Button","onClick","color","HOST","_makeLayoutObj","layout","email_to","EditPanel","layoutState","selectedState","loadingState","dialogOpenState","fmtState","handleGenerateModelClick","fmt","console","log","handleConfirmEmailClick","email","a","axios","post","data","handleSizeChange","newValue","Number","className","CircularProgress","variant","preventDefault","fileSelector","document","createElement","setAttribute","onchange","e1","reader","FileReader","readAsBinaryString","files","onloadend","layoutObj","JSON","parse","result","Object","entries","map","v","click","stringify","FileSaver","saveAs","Blob","FormControl","InputLabel","htmlFor","Select","native","IconButton","alt","merge","Math","max","AddBox","none","IndeterminateCheckBox","KeySwitch","keyState","selectedClassName","seq","grid","bounds","left","LayoutUtil","top","position","onDrag","ui","p","deltaX","deltaY","style","KeyPlate","index","Home","About","AboutDialog","React","setOpen","right","aria-describedby","href","Header","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.562b2f1c.chunk.js","sourcesContent":["export const PLATE_PADDING = 15;\nexport const UNIT_1 = 60;\nexport const UNIT_0_25 = UNIT_1 / 4;\n\nexport function keyPosition(x, y) {\n  return {\n    x: x * UNIT_1 + PLATE_PADDING,\n    y: y * UNIT_1 + PLATE_PADDING,\n  };\n}\n\nexport function keySize(w, h) {\n  return {\n    width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n    height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n  };\n}\n\nexport function plateSize(newLayout, in_unit = false) {\n  let newWidth = 0;\n  let newHeight = 0;\n  for (const val of newLayout) {\n    const end = val.x + val.w;\n    newWidth = (end > newWidth) ? end : newWidth;\n    const bottom = val.y + val.h;\n    newHeight = (bottom > newHeight) ? bottom : newHeight;\n  }\n\n  return {\n    width: in_unit ? newWidth : (newWidth * UNIT_1 + PLATE_PADDING * 2),\n    height: in_unit ? newHeight : (newHeight * UNIT_1 + PLATE_PADDING * 2),\n  };\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useState } from '@hookstate/core';\n\n\nexport default function EditPanelEmailDialog(props) {\n  const { openState, onConfirm } = props;\n  const emailState = useState('');\n  const validState = useState(false);\n\n  const handleClose = () => {\n    openState.set(false);\n  }\n\n  const handleChange = (e) => {\n    const inputEmail = e.target.value;\n\n    // 이메일 유효성 체크\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    validState.set(re.test(String(inputEmail).toLowerCase()));\n    emailState.set(validState.get() ? inputEmail : '');\n  }\n\n  const handleConfirmClick = () => {\n    if (validState.get()) {\n      handleClose();\n      onConfirm(emailState.get());\n    }\n  };\n\n  return (\n    <div>\n      <Dialog open={openState.get()} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Generate Model</DialogTitle>\n        <DialogContent>\n          <Typography>\n            생성된 모델 파일을 받으실 이메일 주소를 입력해주세요.\n          </Typography>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange}\n          />\n          {validState.get() ? '' : <DialogContentText>유효하지 않은 이메일입니다.</DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmClick} color=\"primary\">\n            Generate\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import './EditPanel.css';\n\nimport { useState, none } from '@hookstate/core';\nimport { Button, IconButton, FormControl, InputLabel, TextField, Select, MenuItem, CircularProgress } from '@material-ui/core';\nimport { AddBox, IndeterminateCheckBox } from '@material-ui/icons';\n\nimport axios from 'axios';\nimport FileSaver from 'file-saver';\n\nimport { plateSize } from '../utils/LayoutUtil';\nimport EditPanelEmailDialog from './EditPanelEmailDialog';\n\n\nconst HOST = 'https://diy-mechanical-keyboard.herokuapp.com';\n\n\nfunction _makeLayoutObj(layout, email_to = '') {\n  return {\n    ...plateSize(layout, true),\n    layout: layout,\n    email_to: email_to,\n  };\n}\n\n\nfunction EditPanel(props) {\n  const { layoutState, selectedState } = props;\n  const loadingState = useState(false);\n  const dialogOpenState = useState(false);\n  const fmtState = useState('');\n\n  const handlePredefinedClick = async () => {\n    loadingState.set(true);\n\n    const { data } = await axios.get(`${HOST}/layout`);\n    console.log(data.result);\n\n    loadingState.set(false);\n  };\n\n  const handleUploadClick = (e) => {\n    e.preventDefault();\n\n    const handleOnChange = (e1) => {\n      const reader = new FileReader();\n      reader.readAsBinaryString(e1.target.files[0]);\n      reader.onloadend = () => {\n        const layoutObj = JSON.parse(reader.result);\n\n        // 불러온 layout 파일에서 키의 width, height 속성이 없을 경우 1로 설정\n        Object.entries(layoutObj.layout).map(([_, v]) => {\n          v.w = ('w' in v) ? v.w : 1;\n          v.h = ('h' in v) ? v.h : 1;\n        });\n\n        layoutState.set(layoutObj.layout);\n        selectedState.set(-1);\n      };\n    };\n\n    const fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n    fileSelector.setAttribute('accept', '.json');\n    fileSelector.onchange = handleOnChange;\n    fileSelector.click();\n  };\n\n  const handleDownloadClick = () => {\n    const data = JSON.stringify(_makeLayoutObj(layoutState.get()));\n    FileSaver.saveAs(\n      new Blob([data], { type: 'text/json; charset=utf-8' }),\n      'layout.json'\n    );\n  };\n\n  const handleGenerateModelClick = (fmt) => {\n    if (loadingState.get()) {\n      console.log('prevent duplicated click!');\n      return;\n    }\n\n    fmtState.set(fmt);\n    dialogOpenState.set(true);\n  };\n\n  const handleConfirmEmailClick = async (email) => {\n    loadingState.set(true);\n\n    const { data } = await axios.post(\n      `${HOST}/model/plate/${fmtState.get()}`,\n      _makeLayoutObj(layoutState.get(), email)\n    );\n    console.log(data);\n\n    loadingState.set(false);\n  };\n\n  const handleLabelChange = (e) => {\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n\n    layoutState[selectedState.get()].label.set(e.target.value);\n  };\n\n  const handleSizeChange = (e) => {\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n    // 예외 처리: 키가 선택된 상태에서 크기 없음 선택 불가\n    if (e.target.value === '') {\n      return;\n    }\n\n    // 넓이 또는 높이 크기 변경\n    const newValue = Number(e.target.value);\n    if (e.target.id === 'selected-key-width') {\n      layoutState[selectedState.get()].w.set(newValue);\n    } else if (e.target.id === 'selected-key-height') {\n      layoutState[selectedState.get()].h.set(newValue);\n    } else {\n      console.log('>>>>> undefined id: ' + e.target.id);\n      return;\n    }\n  };\n\n  const handleAddSwitch = () => {\n    const { width, height } = plateSize(layoutState.get(), true);\n    layoutState.merge([{\n      'label': 'New Key',\n      'x': width,  // right end 배치\n      'y': Math.max(height - 1, 0),  // bottom align 배치\n      'w': 1,\n      'h': 1,\n    }]);\n  };\n\n  const handleRemoveSwitch = () => {\n    // 예외 처리: 선택된 키가 없다면 동작 무시함.\n    if (selectedState.get() === -1) {\n      return;\n    }\n\n    layoutState[selectedState.get()].set(none);\n    selectedState.set(-1);\n  };\n\n  return (\n    <div className='editpanel'>\n      {loadingState.get() ? <div className='loading'><CircularProgress /></div> : ''}\n      <EditPanelEmailDialog\n        openState={dialogOpenState}\n        onConfirm={handleConfirmEmailClick}\n      />\n      <div className='editpanel__container'>\n        {/* <Button\n          className='editpanel__item'\n          variant='outlined'\n          color='primary'\n          onClick={handlePredefinedClick}\n        >\n          Predefined Layout\n        </Button> */}\n        <Button\n          className='editpanel__item'\n          variant='outlined'\n          color='primary'\n          onClick={handleUploadClick}\n        >\n          Upload Layout\n        </Button>\n        <Button\n          className='editpanel__item'\n          variant='outlined'\n          color='primary'\n          onClick={handleDownloadClick}\n        >\n          Download Layout\n        </Button>\n        <Button\n          className='editpanel__item'\n          variant='outlined'\n          color='primary'\n          onClick={() => handleGenerateModelClick('stl')}\n        >\n          Generate STL (3D)\n        </Button>\n        <Button\n          className='editpanel__item'\n          variant='outlined'\n          color='primary'\n          onClick={() => handleGenerateModelClick('dxf')}\n        >\n          Generate DXF (2D)\n        </Button>\n      </div>\n      <div className='editpanel__container'>\n        <FormControl className='editpanel__item'>\n          <TextField\n            id='selected-key-label'\n            label='Key Label'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].label.get()}\n            onChange={handleLabelChange}\n          />\n        </FormControl>\n        <FormControl className='editpanel__item'>\n          <InputLabel htmlFor='select-key-width'>Width</InputLabel>\n          <Select\n            native\n            id='selected-key-width'\n            label='Width'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].w.get()}\n            onChange={handleSizeChange}\n          >\n            <option value=''></option>\n            <option value='1'>1U</option>\n            <option value='1.25'>1.25U</option>\n            <option value='1.5'>1.5U</option>\n            <option value='1.75'>1.75U</option>\n            <option value='2'>2U</option>\n            <option value='2.25'>2.25U</option>\n            <option value='2.75'>2.75U</option>\n            <option value='6'>6U</option>\n            <option value='6.25'>6.25U</option>\n            <option value='6.5'>6.5U</option>\n            <option value='7'>7U</option>\n          </Select>\n        </FormControl>\n        <FormControl className='editpanel__item'>\n          <InputLabel htmlFor='select-key-height'>Height</InputLabel>\n          <Select\n            native\n            id='selected-key-height'\n            label='Height'\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].h.get()}\n            onChange={handleSizeChange}\n          >\n            <option value=''></option>\n            <option value='1'>1U</option>\n            <option value='2'>2U</option>\n          </Select>\n        </FormControl>\n        <IconButton\n          className='editpanel__item editpanel__imageicon'\n          alt='Add New Switch'\n          onClick={handleAddSwitch}\n        >\n          <AddBox />\n        </IconButton>\n        <IconButton\n          className='editpanel__item editpanel__imageicon'\n          alt='Remove Selected Switch'\n          onClick={handleRemoveSwitch}\n        >\n          <IndeterminateCheckBox />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default EditPanel;\n","import React from 'react';\nimport Draggable from 'react-draggable';\n\nimport * as LayoutUtil from '../utils/LayoutUtil';\nimport './KeySwitch.css';\n\n\nfunction KeySwitch(props) {\n  const { label, x, y, w, h } = props.keyState;\n  const selectedState = props.selectedState;\n\n  const selectedClassName = selectedState.get() === props.seq ? 'key-switch-selected' : '';\n  const handleDrag = (e, ui) => {\n    x.set(p => p + (ui.deltaX / LayoutUtil.UNIT_1));\n    y.set(p => p + (ui.deltaY / LayoutUtil.UNIT_1));\n  };\n  const handleClick = () => {\n    // 키 스위치 클릭 시 선택 및 해제하도록 변경\n    selectedState.set(p => (p === props.seq) ? -1 : props.seq);\n  };\n  return (\n    <Draggable\n      grid={[LayoutUtil.UNIT_0_25, LayoutUtil.UNIT_0_25]}\n      bounds={{left: LayoutUtil.PLATE_PADDING, top: LayoutUtil.PLATE_PADDING}}\n      position={LayoutUtil.keyPosition(x.get(), y.get())}\n      onDrag={handleDrag}\n    >\n      <div\n        className={`key-switch ${selectedClassName}`}\n        style={LayoutUtil.keySize(w.get(), h.get())}\n        onClick={handleClick}\n      >\n        {label.get()}\n      </div>\n    </Draggable>\n  );\n}\n\nexport default KeySwitch;\n","import './KeyPlate.css';\n\nimport { useState } from '@hookstate/core';\n\nimport { plateSize } from '../utils/LayoutUtil';\nimport EditPanel from './EditPanel';\nimport KeySwitch from './KeySwitch';\n\n\nfunction KeyPlate() {\n  const layoutState = useState([\n    { label: 'New Key', w: 1, h: 1, x: 0, y: 0 },\n  ]);\n  const selectedState = useState(-1);\n\n  return (\n    <div>\n      <EditPanel\n        layoutState={layoutState}\n        selectedState={selectedState}\n      />\n      <div\n        className='key-plate'\n        style={plateSize(layoutState.get())}>\n        {layoutState.map((keyState, index) =>\n          <KeySwitch\n            key={index}\n            seq={index}\n            keyState={keyState}\n            selectedState={selectedState}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default KeyPlate;\n","import './Home.css';\n\nimport KeyPlate from '../components/KeyPlate';\n\n\nfunction Home() {\n  return (\n    <div className='home'>\n      <KeyPlate />\n    </div>\n  );\n}\n\nexport default Home;\n","import './About.css';\n\nconst About = () => (\n  <div className='about'>\n    about...\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InfoIcon from '@material-ui/icons/Info';\n\nexport default function AboutDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div style={{ position: 'fixed', right: '5px', top: '5px' }}>\n        <IconButton variant='outlined' color='default' onClick={handleClickOpen}>\n          <InfoIcon />\n        </IconButton>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='about-dialog-title'\n        aria-describedby='about-dialog-description'\n      >\n        <DialogTitle id='about-dialog-title'>About This App</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='about-dialog-description'>\n            Mechanical Keyboard Layout Editor은 기계식 키보드를 DIY로 제작하기 위해\n            키 스위치를 사용자가 원하는 대로 배치하고 이를 3D프린터(또는 CNC조각기)로 출력할 수 있도록\n            STL 형식의 3D 모델링 또는 DXF 형식의 2D 모델링 파일을 생성해줍니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            현재는 키 스위치를 꽂을 수 있는 상판(plate)의 모델링 파일을 생성해주며,\n            PCB 용도의 하판도 생성을 할수 있도록 고려 중입니다.\n            키 스위치 및 키캡은 기성품을 구매하여 조립이 필요하며 Cherry MX, Kailh 스위치 등이 호환됩니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            사용자가 디자인한 키 레이아웃 및 모델링의 소유권은 모두 이를 디자인한 사용자에게 있습니다.\n            또한, 생성된 3D 모델링 파일로 출력 시 발생할 수 있는 모든 문제는 사용자에게 책임이 있습니다.\n            제가 참고한 키 스위치 및 스테빌라이저에 맞도록 설계가 되었으므로 다른 부품과는 호환에 문제가 있을 수 있습니다.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            발견하신 이슈 및 개선 사항, 또는 문의 사항이 있으시면,&nbsp;\n            <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>GitHub issue</a>\n            &nbsp;혹은&nbsp;\n            <a href='mailto:sinjin.jang0.gmail.com'>e-mail</a>로 알려주세요.\n          </DialogContentText>\n          <DialogContentText id='about-dialog-description'>\n            <p>알고 있는 이슈 사항:</p>\n            <ul>\n              <li>넓이가 6U~7U 크기인 키 스위치의 스테빌라이저 홀이 2U 크기로 생성</li>\n              <li>PCB-mount 스테빌라이저에서 plate-mount 스테빌라이저로 변경 예정</li>\n            </ul>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary' autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import './Header.css';\n\nimport AboutDialog from './AboutDialog';\n\nconst Header = () => (\n  <header>\n    <p className='app_name'>Mechanical Keyboard Layout Editor</p>\n    <AboutDialog />\n  </header>\n);\n\nexport default Header;\n","import './Footer.css';\nimport React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className='footer'>\n      <div className='footer__item'>\n        Copyright©2021 Sinjin Jang<br />All rights reserved.\n      </div>\n      <div className='footer__item'>\n        Get source code of this app:<br />\n        <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>mechanical-keyboard-layout-editor on GitHub</a>\n      </div>\n      <div className='footer__item'>\n        <a href='https://donaricano.com/mypage/1722367584_zHWZl2' target='_blank'>도네리카노 커피 후원</a><br />\n        <a href='https://www.buymeacoffee.com/sinjin0' target='_blank'>Buy Me a Coffee</a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { HashRouter, Route } from 'react-router-dom';\n\nimport Home from './routes/Home';\nimport About from './routes/About';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Navigation from './components/Navigation';\n\nconst App = () => (\n  <>\n    <Header />\n    <HashRouter>\n      {/* <Navigation /> */}\n      <Route exact path='/' component={Home} />\n      <Route path='/about' component={About} />\n    </HashRouter>\n    <Footer />\n  </>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}