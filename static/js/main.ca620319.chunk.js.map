{"version":3,"sources":["utils/LayoutUtil.js","components/EditPanel.js","components/KeySwitch.js","components/KeyPlate.js","routes/Home.js","routes/About.js","components/AboutDialog.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["PLATE_PADDING","UNIT_1","keyPosition","x","y","keySize","w","h","width","height","plateSize","newLayout","in_unit","newWidth","newHeight","val","end","bottom","EditPanel","props","layoutState","selectedState","loadingState","useState","_makeLayoutJson","get","layout","handleGenerateModelClick","a","console","log","set","axios","post","host","data","FileSaver","saveAs","Blob","type","handleSizeChange","e","target","value","newValue","Number","id","className","CircularProgress","Button","variant","color","onClick","preventDefault","fileSelector","document","createElement","setAttribute","onchange","e1","reader","FileReader","readAsBinaryString","files","onloadend","layoutObj","JSON","parse","result","Object","entries","map","v","click","stringify","FormControl","TextField","label","onChange","InputLabel","htmlFor","Select","native","IconButton","alt","merge","Math","max","AddBox","none","IndeterminateCheckBox","KeySwitch","keyState","selectedClassName","seq","grid","bounds","left","LayoutUtil","top","position","onDrag","ui","p","deltaX","deltaY","style","KeyPlate","index","Home","About","AboutDialog","React","open","setOpen","handleClose","right","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","href","DialogActions","autoFocus","Header","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca620319.chunk.js","sourcesContent":["export const PLATE_PADDING = 15;\r\nexport const UNIT_1 = 60;\r\nexport const UNIT_0_25 = UNIT_1 / 4;\r\n\r\nexport function keyPosition(x, y) {\r\n  return {\r\n    x: x * UNIT_1 + PLATE_PADDING,\r\n    y: y * UNIT_1 + PLATE_PADDING,\r\n  };\r\n}\r\n\r\nexport function keySize(w, h) {\r\n  return {\r\n    width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n    height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\r\n  };\r\n}\r\n\r\nexport function plateSize(newLayout, in_unit = false) {\r\n  let newWidth = 0;\r\n  let newHeight = 0;\r\n  for (const val of newLayout) {\r\n    const end = val.x + val.w;\r\n    newWidth = (end > newWidth) ? end : newWidth;\r\n    const bottom = val.y + val.h;\r\n    newHeight = (bottom > newHeight) ? bottom : newHeight;\r\n  }\r\n\r\n  return {\r\n    width: in_unit ? newWidth : (newWidth * UNIT_1 + PLATE_PADDING * 2),\r\n    height: in_unit ? newHeight : (newHeight * UNIT_1 + PLATE_PADDING * 2),\r\n  };\r\n}\r\n","import './EditPanel.css';\r\n\r\nimport { useState, none } from '@hookstate/core';\r\nimport { Button, IconButton, FormControl, InputLabel, TextField, Select, MenuItem, CircularProgress } from '@material-ui/core';\r\nimport { AddBox, IndeterminateCheckBox } from '@material-ui/icons';\r\n\r\nimport axios from 'axios';\r\nimport FileSaver from 'file-saver';\r\n\r\nimport { plateSize } from '../utils/LayoutUtil';\r\n\r\n\r\nfunction EditPanel(props) {\r\n  const { layoutState, selectedState } = props;\r\n  const loadingState = useState(false);\r\n\r\n  const handleUploadClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    const handleOnChange = (e1) => {\r\n      const reader = new FileReader();\r\n      reader.readAsBinaryString(e1.target.files[0]);\r\n      reader.onloadend = () => {\r\n        const layoutObj = JSON.parse(reader.result);\r\n\r\n        // 불러온 layout 파일에서 키의 width, height 속성이 없을 경우 1로 설정\r\n        Object.entries(layoutObj.layout).map(([_, v]) => {\r\n          v.w = ('w' in v) ? v.w : 1;\r\n          v.h = ('h' in v) ? v.h : 1;\r\n        });\r\n\r\n        layoutState.set(layoutObj.layout);\r\n        selectedState.set(-1);\r\n      };\r\n    };\r\n\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('accept', '.json');\r\n    fileSelector.onchange = handleOnChange;\r\n    fileSelector.click();\r\n  };\r\n\r\n  const _makeLayoutJson = () => {\r\n    return {\r\n      ...plateSize(layoutState.get(), true),\r\n      layout: layoutState.get()\r\n    };\r\n  };\r\n\r\n  const handleDownloadClick = () => {\r\n    const data = JSON.stringify(_makeLayoutJson());\r\n    FileSaver.saveAs(\r\n      new Blob([data], { type: 'text/json; charset=utf-8' }),\r\n      'plate-layout.json'\r\n    );\r\n  };\r\n\r\n  const handleGenerateModelClick = async () => {\r\n    if (loadingState.get()) {\r\n      console.log('prevent duplicated click!');\r\n      return;\r\n    }\r\n\r\n    loadingState.set(true);\r\n\r\n    const host = 'https://diy-mechanical-keyboard.herokuapp.com';\r\n    const { data } = await axios.post(\r\n      host + '/model-3d/plate',\r\n      _makeLayoutJson()\r\n    );\r\n\r\n    FileSaver.saveAs(\r\n      new Blob([data], { type: 'text/plain; charset=utf-8' }),\r\n      'plate-model.stl'\r\n    );\r\n\r\n    loadingState.set(false);\r\n  };\r\n\r\n  const handleLabelChange = (e) => {\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n\r\n    layoutState[selectedState.get()].label.set(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n    // 예외 처리: 키가 선택된 상태에서 크기 없음 선택 불가\r\n    if (e.target.value === '') {\r\n      return;\r\n    }\r\n\r\n    // 넓이 또는 높이 크기 변경\r\n    const newValue = Number(e.target.value);\r\n    if (e.target.id === 'selected-key-width') {\r\n      layoutState[selectedState.get()].w.set(newValue);\r\n    } else if (e.target.id === 'selected-key-height') {\r\n      layoutState[selectedState.get()].h.set(newValue);\r\n    } else {\r\n      console.log('>>>>> undefined id: ' + e.target.id);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleAddSwitch = () => {\r\n    const { width, height } = plateSize(layoutState.get(), true);\r\n    layoutState.merge([{\r\n      'label': 'New Key',\r\n      'x': width,  // right end 배치\r\n      'y': Math.max(height - 1, 0),  // bottom align 배치\r\n      'w': 1,\r\n      'h': 1,\r\n    }]);\r\n  };\r\n\r\n  const handleRemoveSwitch = () => {\r\n    // 예외 처리: 선택된 키가 없다면 동작 무시함.\r\n    if (selectedState.get() === -1) {\r\n      return;\r\n    }\r\n\r\n    layoutState[selectedState.get()].set(none);\r\n    selectedState.set(-1);\r\n  };\r\n\r\n  return (\r\n    <div className='editpanel'>\r\n      {loadingState.get() ? <div className='loading'><CircularProgress /></div> : ''}\r\n      <div className='editpanel__container'>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handleUploadClick}\r\n        >\r\n          Upload Layout\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handleDownloadClick}\r\n        >\r\n          Download Layout\r\n        </Button>\r\n        <Button\r\n          className='editpanel__item'\r\n          variant='outlined'\r\n          color='primary'\r\n          onClick={handleGenerateModelClick}\r\n        >\r\n          Generate STL (3D)\r\n        </Button>\r\n      </div>\r\n      <div className='editpanel__container'>\r\n        <FormControl className='editpanel__item'>\r\n          <TextField\r\n            id='selected-key-label'\r\n            label='Key Label'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].label.get()}\r\n            onChange={handleLabelChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl className='editpanel__item'>\r\n          <InputLabel htmlFor='select-key-width'>Width</InputLabel>\r\n          <Select\r\n            native\r\n            id='selected-key-width'\r\n            label='Width'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].w.get()}\r\n            onChange={handleSizeChange}\r\n          >\r\n            <option value=''></option>\r\n            <option value='1'>1U</option>\r\n            <option value='1.25'>1.25U</option>\r\n            <option value='1.5'>1.5U</option>\r\n            <option value='1.75'>1.75U</option>\r\n            <option value='2'>2U</option>\r\n            <option value='2.25'>2.25U</option>\r\n            <option value='2.75'>2.75U</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className='editpanel__item'>\r\n          <InputLabel htmlFor='select-key-height'>Height</InputLabel>\r\n          <Select\r\n            native\r\n            id='selected-key-height'\r\n            label='Height'\r\n            value={selectedState.get() === -1 ? '' : layoutState[selectedState.get()].h.get()}\r\n            onChange={handleSizeChange}\r\n          >\r\n            <option value=''></option>\r\n            <option value='1'>1U</option>\r\n            <option value='2'>2U</option>\r\n          </Select>\r\n        </FormControl>\r\n        <IconButton\r\n          className='editpanel__item editpanel__imageicon'\r\n          alt='Add New Switch'\r\n          onClick={handleAddSwitch}\r\n        >\r\n          <AddBox />\r\n        </IconButton>\r\n        <IconButton\r\n          className='editpanel__item editpanel__imageicon'\r\n          alt='Remove Selected Switch'\r\n          onClick={handleRemoveSwitch}\r\n        >\r\n          <IndeterminateCheckBox />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPanel;\r\n","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as LayoutUtil from '../utils/LayoutUtil';\r\nimport './KeySwitch.css';\r\n\r\n\r\nfunction KeySwitch(props) {\r\n  const { label, x, y, w, h } = props.keyState;\r\n  const selectedState = props.selectedState;\r\n\r\n  const selectedClassName = selectedState.get() === props.seq ? 'key-switch-selected' : '';\r\n  const handleDrag = (e, ui) => {\r\n    x.set(p => p + (ui.deltaX / LayoutUtil.UNIT_1));\r\n    y.set(p => p + (ui.deltaY / LayoutUtil.UNIT_1));\r\n  };\r\n  const handleClick = () => {\r\n    // 키 스위치 클릭 시 선택 및 해제하도록 변경\r\n    selectedState.set(p => (p === props.seq) ? -1 : props.seq);\r\n  };\r\n  return (\r\n    <Draggable\r\n      grid={[LayoutUtil.UNIT_0_25, LayoutUtil.UNIT_0_25]}\r\n      bounds={{left: LayoutUtil.PLATE_PADDING, top: LayoutUtil.PLATE_PADDING}}\r\n      position={LayoutUtil.keyPosition(x.get(), y.get())}\r\n      onDrag={handleDrag}\r\n    >\r\n      <div\r\n        className={`key-switch ${selectedClassName}`}\r\n        style={LayoutUtil.keySize(w.get(), h.get())}\r\n        onClick={handleClick}\r\n      >\r\n        {label.get()}\r\n      </div>\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default KeySwitch;\r\n","import './KeyPlate.css';\r\n\r\nimport { useState } from '@hookstate/core';\r\n\r\nimport { plateSize } from '../utils/LayoutUtil';\r\nimport EditPanel from './EditPanel';\r\nimport KeySwitch from './KeySwitch';\r\n\r\n\r\nfunction KeyPlate() {\r\n  const layoutState = useState([\r\n    { label: 'New Key', w: 1, h: 1, x: 0, y: 0 },\r\n  ]);\r\n  const selectedState = useState(-1);\r\n\r\n  return (\r\n    <div>\r\n      <EditPanel\r\n        layoutState={layoutState}\r\n        selectedState={selectedState}\r\n      />\r\n      <div\r\n        className='key-plate'\r\n        style={plateSize(layoutState.get())}>\r\n        {layoutState.map((keyState, index) =>\r\n          <KeySwitch\r\n            key={index}\r\n            seq={index}\r\n            keyState={keyState}\r\n            selectedState={selectedState}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyPlate;\r\n","import './Home.css';\r\n\r\nimport KeyPlate from '../components/KeyPlate';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='home'>\r\n      <KeyPlate />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './About.css';\r\n\r\nconst About = () => (\r\n  <div className='about'>\r\n    about...\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nexport default function AboutDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: 'fixed', right: '5px', top: '5px' }}>\r\n        <IconButton variant='outlined' color='default' onClick={handleClickOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='about-dialog-title'\r\n        aria-describedby='about-dialog-description'\r\n      >\r\n        <DialogTitle id='about-dialog-title'>About This App</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='about-dialog-description'>\r\n            Mechanical Keyboard Layout Editor은 기계식 키보드를 DIY로 제작하기 위해\r\n            키 스위치를 사용자가 원하는 대로 배치하고 이를 3D 프린터로 출력할 수 있도록\r\n            STL 형식의 3D 모델링 파일을 생성해줍니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            현재는 키 스위치를 꽂을 수 있는 상판(plate)의 3D 모델링 파일을 생성해주며,\r\n            PCB 용도의 하판도 생성을 할수 있도록 고려 중입니다.\r\n            키 스위치 및 키캡은 기성품을 구매하여 조립이 필요하며 Cherry MX, Kailh 스위치 등이 호환됩니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            사용자가 디자인한 키 레이아웃 및 모델링의 소유권은 모두 이를 디자인한 사용자에게 있습니다.\r\n            레이아웃 설정을 서버로 전송하여 3D 모델링 작업을 수행하지만 어떠한 정보도 기록하지 않습니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            또한, 생성된 3D 모델링 파일로 출력 시 발생할 수 있는 모든 문제는 사용자에게 책임이 있습니다.\r\n            제가 참고한 키 스위치 및 스테빌라이저에 맞도록 설계가 되었으므로 다른 부품과는 호환에 문제가 있을 수 있습니다.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            발견하신 이슈 및 개선 사항, 또는 문의 사항이 있으시면,&nbsp;\r\n            <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>GitHub issue</a>\r\n            &nbsp;혹은&nbsp;\r\n            <a href='mailto:sinjin.jang0.gmail.com'>e-mail</a>로 알려주세요.\r\n          </DialogContentText>\r\n          <DialogContentText id='about-dialog-description'>\r\n            <p>알고 있는 이슈 사항:</p>\r\n            <ul>\r\n              <li>높이가 2U인 키 스위치의 스테빌라이저 홀 없음</li>\r\n              <li>PCB-mount 스테빌라이저에서 plate-mount 스테빌라이저로 변경 예정</li>\r\n            </ul>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary' autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import './Header.css';\r\n\r\nimport AboutDialog from './AboutDialog';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <p className='app_name'>Mechanical Keyboard Layout Editor</p>\r\n    <AboutDialog />\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import './Footer.css';\r\nimport React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='footer__item'>\r\n        Copyright©2021 Sinjin Jang<br />All rights reserved.\r\n      </div>\r\n      <div className='footer__item'>\r\n        Get source code of this app:<br />\r\n        <a href='https://github.com/SinjinJang/mechanical-keyboard-layout-editor' target='_blank'>mechanical-keyboard-layout-editor on GitHub</a>\r\n      </div>\r\n      <div className='footer__item'>\r\n        <a href='https://donaricano.com/mypage/1722367584_zHWZl2' target='_blank'>도네리카노 커피 후원</a><br />\r\n        <a href='https://www.buymeacoffee.com/sinjin0' target='_blank'>Buy Me a Coffee</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './routes/Home';\r\nimport About from './routes/About';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Navigation from './components/Navigation';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <HashRouter>\r\n      {/* <Navigation /> */}\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/about' component={About} />\r\n    </HashRouter>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}