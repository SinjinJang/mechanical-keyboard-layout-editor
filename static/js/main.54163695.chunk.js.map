{"version":3,"sources":["images/add_circle_outline_black_24dp.svg","images/remove_circle_outline_black_24dp.svg","App.js","reportWebVitals.js","index.js"],"names":["UNIT_1","PLATE_PADDING","KeySwitch","this","props","label","x","y","w","h","isSelected","position","bounds","left","top","style","width","height","fontWeight","grid","onDrag","className","onClick","React","Component","EditPanel","Form","Group","controlId","Label","File","id","type","accept","onChange","onLayoutFileChange","Button","variant","download","href","onDownloadClick","alert","Control","name","value","selectedKey","onLabelChange","as","selectedAttrs","onSizeChange","alt","src","plus_icon","onAddSwitchClick","minus_icon","onRemoveSwitchClick","KeyPlate","defaultLayout","defaultSize","resizePlate","state","layout","seq","Object","keys","length","newLayout","newKeyLabel","Math","max","newSize","setState","e","attrs","target","newValue","Number","console","log","ui","keyLabel","node","textContent","keyObj","deltaX","deltaY","JSON","stringify","reader","FileReader","readAsBinaryString","files","onloadend","layoutObj","parse","result","entries","map","v","newWidth","newHeight","val","end","bottom","stylePlate","push","handleSwitchDrag","handleSwitchClick","handleAddSwitch","handleRemoveSwitch","handleSizeChange","handleLabelChange","handleDownloadClick","handleLayoutFileChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54163695.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add_circle_outline_black_24dp.b4a78441.svg\";","export default __webpack_public_path__ + \"static/media/remove_circle_outline_black_24dp.1bfeccf5.svg\";","import './App.css';\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport plus_icon from './images/add_circle_outline_black_24dp.svg';\nimport minus_icon from './images/remove_circle_outline_black_24dp.svg';\n\n\n// 기본 1U 스위치의 크기 정의 (px 단위)\nconst UNIT_1 = 60;\nconst UNIT_0_25 = UNIT_1 / 4;\n// 키 배치판 테두리 표시를 위한 여백\nconst PLATE_PADDING = 15;\n\nclass KeySwitch extends React.Component {\n  render() {\n    const { label, x, y, w, h, isSelected } = this.props;\n    const position = {\n      x: x * UNIT_1 + PLATE_PADDING,\n      y: y * UNIT_1 + PLATE_PADDING,\n    };\n    const bounds = {\n      left: PLATE_PADDING,\n      top: PLATE_PADDING,\n    };\n    const style = {\n      width: (w * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n      height: (h * UNIT_1) - 2,  // NOTE: 테두리 두께만큼 빼줌\n      fontWeight: isSelected ? 'bold' : 'normal',\n    };\n    return (\n      <Draggable\n        grid={[UNIT_0_25, UNIT_0_25]}\n        onDrag={this.props.onDrag}\n        position={position}\n        bounds={bounds}\n      >\n        <div\n          className='key-switch'\n          style={style}\n          onClick={this.props.onClick}\n        >\n          {label}\n        </div>\n      </Draggable>\n    )\n  }\n}\n\nclass EditPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='editpanel__container'>\n          <Form.Group controlId='uploadLayout' className='editpanel__item'>\n            <Form.Label>Layout File to Upload</Form.Label>\n            <Form.File id='layoutFile'\n              type='file' accept='.json'\n              onChange={this.props.onLayoutFileChange}\n            />\n          </Form.Group>\n          <Button\n            className='editpanel__item'\n            variant='outline-secondary'\n            download='layout.json'\n            href={`data:text/json; charset=utf-8,${this.props.onDownloadClick()}`}\n          >\n            Download Layout\n          </Button>\n          <Button\n            className='editpanel__item'\n            variant='outline-success'\n            onClick={() => alert('TODO: generate 3D/2D model')}\n          >\n            Generate 3D/2D Model\n          </Button>\n        </div>\n        <div className='editpanel__container'>\n          <Form.Group controlId='keyLabel' className='editpanel__item'>\n            <Form.Label>Key Label</Form.Label>\n            <Form.Control type='text' name='key_label'\n              value={this.props.selectedKey}\n              onChange={this.props.onLabelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='width' className='editpanel__item'>\n            <Form.Label>Width</Form.Label>\n            <Form.Control as='select' name='key_width'\n              value={this.props.selectedAttrs?.w}\n              onChange={this.props.onSizeChange}\n            >\n              <option value='1'>1U</option>\n              <option value='1.25'>1.25U</option>\n              <option value='1.5'>1.5U</option>\n              <option value='1.75'>1.75U</option>\n              <option value='2'>2U</option>\n              <option value='2.25'>2.25U</option>\n              <option value='2.75'>2.75U</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId='height' className='editpanel__item'>\n            <Form.Label>Height</Form.Label>\n            <Form.Control as='select' name='key_height'\n              value={this.props.selectedAttrs?.h}\n              onChange={this.props.onSizeChange}\n            >\n              <option value='1'>1U</option>\n              <option value='2'>2U</option>\n            </Form.Control>\n          </Form.Group>\n          <Button\n            className='editpanel__item'\n            variant='outline-light'\n          >\n            <img\n              className='editpanel__imageicon'\n              alt='Add New Switch'\n              src={plus_icon}\n              onClick={this.props.onAddSwitchClick} />\n          </Button>\n          <Button\n            className='editpanel__item'\n            variant='outline-light'\n          >\n            <img\n              className='editpanel__imageicon'\n              alt='Remove Selected Switch'\n              src={minus_icon}\n              onClick={this.props.onRemoveSwitchClick} />\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass KeyPlate extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const defaultLayout = {\n      'New Key': { 'x': 0, 'y': 0, 'w': 1, 'h': 1 },\n    };\n    const defaultSize = this.resizePlate(defaultLayout);\n    this.state = {\n      selectedKey: null,\n      layout: defaultLayout,\n      ...defaultSize,\n    };\n  }\n\n  /**\n   * 새로 추가할 중복되지 않은 이름의 키 라벨을 생성해준다.\n   * \n   * @returns 신규 추가될 키 라벨\n   */\n  newKeyLabel() {\n    const { layout } = this.state;\n    let seq = Object.keys(layout).length;\n    let label;\n    do {\n      label = 'Key ' + (seq++);\n    } while(label in layout);\n    return label;\n  }\n\n  handleAddSwitch() {\n    const newLayout = { ...this.state.layout };\n    newLayout[this.newKeyLabel()] = {\n      'x': this.state.width,  // right end 배치\n      'y': Math.max(this.state.height - 1, 0),  // bottom align 배치\n      'w': 1,\n      'h': 1,\n    };\n\n    const newSize = this.resizePlate(newLayout);\n    this.setState({ layout: newLayout, ...newSize });\n  }\n\n  handleRemoveSwitch() {\n    const newLayout = { ...this.state.layout };\n    delete newLayout[this.state.selectedKey];\n    const newSize = this.resizePlate(newLayout);\n    this.setState({\n      selectedKey: null,\n      selectedAttrs: null,\n      layout: newLayout,\n      ...newSize,\n    });\n  }\n\n  handleLabelChange(e) {\n    const newLayout = { ...this.state.layout };\n    const selectedKey = this.state.selectedKey;\n\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedKey == null) {\n      return;\n    }\n\n    // layout 객체에서 키 라벨을 변경하여 저장\n    const attrs = newLayout[selectedKey];\n    delete newLayout[selectedKey];\n    newLayout[e.target.value] = attrs;\n\n    this.setState({\n      layout: newLayout,\n      selectedKey: e.target.value,\n    });\n  }\n\n  handleSizeChange(e) {\n    const newLayout = { ...this.state.layout };\n    const selectedKey = this.state.selectedKey;\n\n    // 예외 처리: 선택된 키가 없다면 입력 내용은 무시함.\n    if (selectedKey == null) {\n      return;\n    }\n\n    // 넓이 또는 높이 크기 변경\n    const attrs = newLayout[selectedKey];\n    const newValue = Number(e.target.value);\n    if (e.target.id === 'width') {\n      attrs.w = newValue;\n    } else if (e.target.id === 'height') {\n      attrs.h = newValue;\n    } else {\n      console.log('>>>>> undefined id: ' + e.target.id);\n      return;\n    }\n\n    const newSize = this.resizePlate(newLayout);\n    this.setState({\n      ...newSize,\n      layout: newLayout,\n    });\n  }\n\n  handleSwitchDrag(e, ui) {\n    // 키 스위치의 좌표 값을 갱신\n    const keyLabel = ui.node.textContent;\n    const newLayout = { ...this.state.layout };\n    const keyObj = newLayout[keyLabel];\n    keyObj.x += (ui.deltaX / UNIT_1);\n    keyObj.y += (ui.deltaY / UNIT_1);\n\n    const newSize = this.resizePlate(newLayout);\n    this.setState({ layout: newLayout, ...newSize });\n  };\n\n  handleSwitchClick(keyLabel) {\n    this.setState({ selectedKey: keyLabel });\n  }\n\n  handleDownloadClick() {\n    return JSON.stringify(this.state.layout);\n  }\n\n  handleLayoutFileChange(e) {\n    const reader = new FileReader();\n    reader.readAsBinaryString(e.target.files[0]);\n    reader.onloadend = () => {\n      const layoutObj = JSON.parse(reader.result);\n\n      // 불러온 layout 파일에서 키의 width, height 속성이 없을 경우 1로 설정\n      Object.entries(layoutObj.layout).map(([_, v]) => {\n        v.w = ('w' in v) ? v.w : 1;\n        v.h = ('h' in v) ? v.h : 1;\n      });\n\n      this.setState({\n        width: layoutObj.width,\n        height: layoutObj.height,\n        layout: layoutObj.layout,\n        selectedKey: '',\n      });\n    }\n  }\n\n  // 스위치 판의 넓이 및 높이를 다시 계산한다.\n  resizePlate(newLayout) {\n    let newWidth = 0;\n    let newHeight = 0;\n    for (const [_, val] of Object.entries(newLayout)) {\n      const end = val.x + val.w;\n      newWidth = (end > newWidth) ? end : newWidth;\n      const bottom = val.y + val.h;\n      newHeight = (bottom > newHeight) ? bottom : newHeight;\n    }\n\n    return { width: newWidth, height: newHeight };\n  };\n\n  render() {\n    const stylePlate = {\n      width: (this.state.width * UNIT_1) + PLATE_PADDING * 2,\n      height: (this.state.height * UNIT_1) + PLATE_PADDING * 2,\n    };\n    const { selectedKey, layout } = this.state;\n\n    // 키 스위치 구성\n    const keys = []\n    for (const [keyLabel, attrs] of Object.entries(layout)) {\n      keys.push(\n        <KeySwitch\n          key={keyLabel}\n          label={keyLabel}\n          x={attrs.x} y={attrs.y}\n          w={attrs.w} h={attrs.h}\n          isSelected={keyLabel === selectedKey}\n          onDrag={(e, ui) => this.handleSwitchDrag(e, ui)}\n          onClick={(e) => this.handleSwitchClick(keyLabel)}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <EditPanel\n          selectedKey={selectedKey}\n          selectedAttrs={layout[selectedKey]}\n          onAddSwitchClick={() => this.handleAddSwitch()}\n          onRemoveSwitchClick={() => this.handleRemoveSwitch()}\n          onSizeChange={(e) => this.handleSizeChange(e)}\n          onLabelChange={(e) => this.handleLabelChange(e)}\n          onDownloadClick={() => this.handleDownloadClick()}\n          onLayoutFileChange={(e) => this.handleLayoutFileChange(e)}\n        />\n        <div className='key-plate' style={stylePlate}>\n          {keys}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Mechanical Keyboard Layout Editor</h1>\n      <KeyPlate />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}